{"version":3,"sources":["webpack:///./ClientApp/app/issues/issues.module.ts","webpack:///./ClientApp/app/interfaces/index.ts","webpack:///./ClientApp/app/interfaces/INotificationSettings.ts","webpack:///./ClientApp/app/interfaces/IRequestModel.ts","webpack:///./ClientApp/app/interfaces/IUser.ts","webpack:///./ClientApp/app/interfaces/IIssues.ts","webpack:///./ClientApp/app/shared/shared.module.ts","webpack:///./ClientApp/app/shared/issues-report.component.ts","webpack:///./ClientApp/app/shared/issues-report.component.html","webpack:///./ClientApp/app/pipes/pipe.module.ts","webpack:///./ClientApp/app/pipes/HumanizePipe.ts","webpack:///delegated ./node_modules/ngx-order-pipe/ngx-order-pipe.es5.js from dll-reference vendor_a449fdf94c391aac3fe0","webpack:///./ClientApp/app/issues/issueDetails.component.ts","webpack:///./ClientApp/app/issues/issueDetails.component.html","webpack:///./ClientApp/app/issues/issueDetails.component.scss?a074","webpack:///./ClientApp/app/issues/issueDetails.component.scss","webpack:///./ClientApp/app/issues/issues.component.ts","webpack:///./ClientApp/app/issues/issues.component.html","webpack:///./ClientApp/app/issues/issuestable.component.ts","webpack:///./ClientApp/app/issues/issuestable.component.html"],"names":["core_1","__webpack_require__","router_1","ng_bootstrap_1","ngx_order_pipe_1","primeng_1","services_1","auth_guard_1","shared_module_1","issueDetails_component_1","issues_component_1","issuestable_component_1","pipe_module_1","routes","path","component","IssuesComponent","canActivate","AuthGuard","IssueDetailsComponent","IssuesModule","__decorate","NgModule","imports","RouterModule","forChild","NgbModule","forRoot","SharedModule","OrderModule","PipeModule","PaginatorModule","TabViewModule","declarations","IssuesTableComponent","exports","providers","IdentityService","__export","NotificationAgent","NotificationType","RequestType","FilterType","UserType","IssueStatus","common_1","forms_1","core_2","issues_report_component_1","IssuesReportComponent","SidebarModule","FormsModule","CommonModule","TranslateModule","interfaces_1","issueService","notification","this","visibleChange","EventEmitter","submitted","issue","subject","description","issueCategory","value","id","status","Pending","resolvedDate","undefined","issueCategoryId","comments","requestId","requestType","movie","title","providerId","userReported","Object","defineProperty","prototype","submit","_this","tvShow","createIssue","subscribe","x","success","hide","visible","emit","Input","Output","Component","selector","template","IssuesService","NotificationService","module","HumanizePipe_1","ngModule","PipeModule_1","HumanizePipe","transform","split","join","toUpperCase","slice","Pipe","name","auth_service_1","route","authService","settingsService","notificationService","newComment","comment","issueId","params","parseInt","isAdmin","hasRole","getIssueSettings","settings","ngOnInit","getIssue","loadComments","addComment","inProgress","updateStatus","InProgress","resolve","Resolved","getComments","styles","ActivatedRoute","AuthService","SettingsService","result","toString","push","i","takeAmount","pendingSkip","inProgressSkip","resolvedSkip","getPending","getInProg","getResolved","getIssuesCount","count","changePagePending","event","first","changePageInProg","changePageResolved","getIssuesPage","pendingIssues","inProgressIssues","resolvedIssues","changePage","order","reverse","rowCount","setOrder","paginate"],"mappings":"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","file":"3.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { OrderModule } from \"ngx-order-pipe\";\nimport { PaginatorModule, SharedModule, TabViewModule } from \"primeng/primeng\";\n\nimport { IdentityService } from \"../services\";\n\nimport { AuthGuard } from \"../auth/auth.guard\";\n\nimport { SharedModule as OmbiShared } from \"../shared/shared.module\";\n\nimport { IssueDetailsComponent } from \"./issueDetails.component\";\nimport { IssuesComponent } from \"./issues.component\";\nimport { IssuesTableComponent } from \"./issuestable.component\";\n\nimport { PipeModule } from \"../pipes/pipe.module\";\n\nconst routes: Routes = [\n    { path: \"\", component: IssuesComponent, canActivate: [AuthGuard] },\n    { path: \":id\", component: IssueDetailsComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        NgbModule.forRoot(),\n        SharedModule,\n        OrderModule,\n        PipeModule,\n        OmbiShared,\n        PaginatorModule,\n        TabViewModule,\n    ],\n    declarations: [\n        IssuesComponent,\n        IssueDetailsComponent,\n        IssuesTableComponent,\n    ],\n    exports: [\n        RouterModule,\n    ],\n    providers: [\n        IdentityService,\n    ],\n\n})\nexport class IssuesModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./ClientApp/app/issues/issues.module.ts","export * from \"./ICommon\";\nexport * from \"./ICouchPotato\";\nexport * from \"./IImages\";\nexport * from \"./IMediaServerStatus\";\nexport * from \"./INotificationSettings\";\nexport * from \"./IPlex\";\nexport * from \"./IRadarr\";\nexport * from \"./IRequestEngineResult\";\nexport * from \"./IRequestModel\";\nexport * from \"./ISearchMovieResult\";\nexport * from \"./ISearchTvResult\";\nexport * from \"./ISettings\";\nexport * from \"./ISonarr\";\nexport * from \"./IUser\";\nexport * from \"./IIssues\";\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./ClientApp/app/interfaces/index.ts","import { ISettings } from \"./ICommon\";\n\nexport interface INotificationSettings extends ISettings {\n    enabled: boolean;\n}\n\nexport interface IEmailNotificationSettings extends INotificationSettings {\n    host: string;\n    password: string;\n    port: number;\n    senderAddress: string;\n    senderName: string;\n    username: string;\n    authentication: boolean;\n    adminEmail: string;\n    disableTLS: boolean;\n    disableCertificateChecking: boolean;\n    notificationTemplates: INotificationTemplates[];\n}\n\nexport interface INotificationTemplates {\n    subject: string;\n    message: string;\n    notificationType: NotificationType;\n    notificationAgent: NotificationAgent;\n    enabled: boolean;\n}\n\nexport enum NotificationAgent {\n    Email,\n    Discord,\n    Pushbullet,\n    Pushover,\n    Telegram,\n}\n\nexport enum NotificationType {\n    NewRequest,\n    Issue,\n    RequestAvailable,\n    RequestApproved,\n    AdminNote,\n    Test,\n    RequestDeclined,\n    ItemAddedToFaultQueue,\n    WelcomeEmail,\n    IssueResolved,\n}\n\nexport interface IDiscordNotifcationSettings extends INotificationSettings {\n    webhookUrl: string;\n    username: string;\n    notificationTemplates: INotificationTemplates[];\n}\n\nexport interface ITelegramNotifcationSettings extends INotificationSettings {\n    botApi: string;\n    chatId: string;\n    parseMode: string;\n    notificationTemplates: INotificationTemplates[];\n}\n\nexport interface ISlackNotificationSettings extends INotificationSettings {\n    webhookUrl: string;\n    username: string;\n    channel: string;\n    iconEmoji: string;\n    iconUrl: string;\n    notificationTemplates: INotificationTemplates[];\n}\n\nexport interface IPushbulletNotificationSettings extends INotificationSettings {\n    accessToken: string;\n    notificationTemplates: INotificationTemplates[];\n    channelTag: string;\n}\n\nexport interface IPushoverNotificationSettings extends INotificationSettings {\n    accessToken: string;\n    notificationTemplates: INotificationTemplates[];\n    userToken: string;\n}\n\nexport interface IMattermostNotifcationSettings extends INotificationSettings {\n    webhookUrl: string;\n    username: string;\n    channel: string;\n    iconUrl: string;\n    notificationTemplates: INotificationTemplates[];\n}\n\nexport interface IMobileNotifcationSettings extends INotificationSettings {\n    notificationTemplates: INotificationTemplates[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./ClientApp/app/interfaces/INotificationSettings.ts","import { IUser } from \"./IUser\";\n\nexport interface IMediaBase {\n  imdbId: string;\n  id: number;\n  providerId: number;\n  title: string;\n  overview: string;\n  posterPath: string;\n  releaseDate: Date;\n  status: string;\n  requestedDate: Date;\n  approved: boolean;\n  type: RequestType;\n  requested: boolean;\n  available: boolean;\n  otherMessage: string;\n  adminNote: string;\n  requestedUser: string;\n  issueId: number;\n  denied: boolean;\n  deniedReason: string;\n  released: boolean;\n}\n\nexport enum RequestType {\n  movie = 1,\n  tvShow = 2,\n}\n\n// NEW WORLD\n\nexport interface IMovieRequests extends IFullBaseRequest {\n  theMovieDbId: number;\n  rootPathOverride: number;\n  qualityOverride: number;\n\n  rootPathOverrideTitle: string;\n  qualityOverrideTitle: string;\n}\n\nexport interface IMovieUpdateModel {\n  id: number;\n}\n\nexport interface IFullBaseRequest extends IBaseRequest {\n  imdbId: string;\n  overview: string;\n  title: string;\n  posterPath: string;\n  backdropPath: string;\n  releaseDate: Date;\n  status: string;\n  released: boolean;\n  background: string;\n\n  // Used in the UI\n  backgroundPath: any;\n}\n\nexport interface IBaseRequest {\n  id: number;\n  approved: boolean;\n  requestedDate: Date;\n  available: boolean;\n  requestedUserId: number;\n  issueId: number;\n  denied: boolean;\n  deniedReason: string;\n  requestType: RequestType;\n  requestedUser: IUser;\n  canApprove: boolean;\n  title: string;\n}\n\nexport interface ITvRequests {\n  id: number;\n  imdbId: string;\n  rootFolder: number;\n  overview: string;\n  title: string;\n  posterPath: string;\n  backdropPath: string;\n  releaseDate: Date;\n  status: string;\n  childRequests: IChildRequests[];\n}\n\nexport interface IChildRequests extends IBaseRequest {\n  seasonRequests: INewSeasonRequests[];\n}\n\nexport interface ITvUpdateModel {\n  id: number;\n}\n\nexport interface INewSeasonRequests {\n  id: number;\n  seasonNumber: number;\n  episodes: IEpisodesRequests[];\n}\n\nexport interface IEpisodesRequests {\n  id: number;\n  episodeNumber: number;\n  title: string;\n  airDate: Date;\n  url: string;\n  available: boolean;\n  requested: boolean;\n  approved: boolean;\n  selected: boolean; // This is for the UI only\n}\n\nexport interface IMovieRequestModel {\n  theMovieDbId: number;\n}\n\nexport interface IFilter {\n  availabilityFilter: FilterType;\n  statusFilter: FilterType;\n}\n\nexport enum FilterType {\n  None = 0,\n  Available = 1,\n  NotAvailable = 2,\n  Approved = 3,\n  Processing = 4,\n  PendingApproval = 5,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./ClientApp/app/interfaces/IRequestModel.ts","import { ICheckbox } from \"./index\";\n\nexport interface IUser {\n    id: string;\n    userName: string;\n    alias: string;\n    claims: ICheckbox[];\n    emailAddress: string;\n    password: string;\n    userType: UserType;\n    lastLoggedIn: Date;\n    hasLoggedIn: boolean;\n    movieRequestLimit: number;\n    episodeRequestLimit: number;\n    userAccessToken: string;\n    // FOR UI\n    checked: boolean;\n}\n\nexport interface ICreateWizardUser {\n    username: string;\n    password: string;\n    usePlexAdminAccount: boolean;\n}\n\nexport enum UserType {\n    LocalUser = 1,\n    PlexUser = 2,\n    EmbyUser = 3,\n}\n\nexport interface IIdentityResult {\n    errors: string[];\n    successful: boolean;\n}\n\nexport interface IUpdateLocalUser extends IUser {\n    currentPassword: string;\n    confirmNewPassword: string;\n}\n\nexport interface IResetPasswordToken {\n    email: string;\n    token: string;\n    password: string;\n}\n\nexport interface IMobileUsersViewModel {\n    username: string;\n    devices: number;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./ClientApp/app/interfaces/IUser.ts","import { IIssueCategory, IUser, RequestType } from \"./\";\n\nexport interface IIssues {\n    id?: number;\n    title: string;\n    requestType: RequestType;\n    providerId: string;\n    subject: string;\n    description: string;\n    issueCategory: IIssueCategory;\n    issueCategoryId: number;\n    status: IssueStatus;\n    resolvedDate?: Date;\n    comments: IIssueComments[];\n    requestId: number | undefined;\n    userReported: IUser | undefined;\n}\n\nexport enum IssueStatus {\n    Pending = 0,\n    InProgress = 1,\n    Resolved = 2,\n}\n\nexport interface IIssueCount {\n    pending: number;\n    inProgress: number;\n    resolved: number;\n}\n\nexport interface IPagenator {\n        first: number;\n        rows: number;\n        page: number;\n        pageCount: number;\n}\n\nexport interface IIssueComments {\n    userId: string;\n    comment: string;\n    movieIssueId: number | undefined;\n    tvIssueId: number | undefined;\n    date: Date;\n    user: IUser;\n    issues: IIssues | undefined;\n}\n\nexport interface IIssuesChat {\n    comment: string;\n    date: Date;\n    username: string;\n    adminComment: boolean;\n}\n\nexport interface INewIssueComments {\n    comment: string;\n    issueId: number;\n}\n\nexport interface IUpdateStatus {\n    issueId: number;\n    status: IssueStatus;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./ClientApp/app/interfaces/IIssues.ts","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { TranslateModule } from \"@ngx-translate/core\";\n\nimport { IssuesReportComponent } from \"./issues-report.component\";\n\nimport { SidebarModule } from \"primeng/primeng\";\n\n@NgModule({\n  declarations: [\n    IssuesReportComponent,\n  ],\n  imports: [\n    SidebarModule,\n    FormsModule,\n    CommonModule,\n  ],\n  exports: [\n      TranslateModule, \n      CommonModule, \n      FormsModule,\n      SidebarModule,\n      IssuesReportComponent,\n    ],\n})\nexport class SharedModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./ClientApp/app/shared/shared.module.ts","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { IIssueCategory, IIssues, IssueStatus, RequestType } from \"./../interfaces\";\nimport { IssuesService, NotificationService } from \"./../services\";\n\n@Component({\n    selector: \"issue-report\",\n    template: require('./issues-report.component.html'),\n\n})\nexport class IssuesReportComponent {\n    @Input() public visible: boolean;\n    @Input() public id: number; // RequestId\n    @Input() public title: string;\n    @Input() public issueCategory: IIssueCategory;\n    @Input() public movie: boolean;\n    @Input() public providerId: string;\n\n    @Output() public visibleChange = new EventEmitter<boolean>();\n\n    public submitted: boolean = false;\n\n    get getTitle(): string {\n        return this.title;\n    }\n\n    public issue: IIssues;\n\n    constructor(private issueService: IssuesService,\n                private notification: NotificationService) {\n        this.issue = {\n            subject: \"\",\n            description: \"\",\n            issueCategory: { value: \"\", id: 0 },\n            status: IssueStatus.Pending,\n            resolvedDate: undefined,\n            id: undefined,\n            issueCategoryId: 0,\n            comments: [],\n            requestId: undefined,\n            requestType: RequestType.movie,\n            title: \"\",\n            providerId: \"\",\n            userReported: undefined,\n        };\n    }\n\n    public submit() {\n        this.submitted = true;\n        const issue = this.issue;\n        issue.requestId = this.id;\n        issue.issueCategory = this.issueCategory;\n        issue.issueCategoryId = this.issueCategory.id;\n        issue.title = this.title;\n        issue.providerId = this.providerId;\n        if (this.movie) {\n            issue.requestType = RequestType.movie;\n        } else {\n            issue.requestType = RequestType.tvShow;\n        }\n        this.issueService.createIssue(issue).subscribe(x => {\n            if (x) {\n                this.notification.success(\"Issue Created\");\n            }\n        });\n\n    }\n\n    public hide(): void {\n        this.submitted = false;\n        this.visible = !this.visible;\n        this.visibleChange.emit(this.visible);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./ClientApp/app/shared/issues-report.component.ts","module.exports = \"<p-sidebar [(visible)]=\\\"visible\\\" position=\\\"right\\\" styleClass=\\\"ui-sidebar-md side-back\\\" (onHide)=\\\"hide()\\\">\\n    <div *ngIf=\\\"title\\\">\\n\\n       \\n        <h3>Reporting an Issue for \\\"{{title}}\\\"</h3>\\n\\n        <h4 *ngIf=\\\"issueCategory\\\">Issue type: {{issueCategory.value}}</h4>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"subject\\\" class=\\\"control-label\\\">Subject</label>\\n            <div>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"issue.subject\\\" class=\\\"form-control form-control-custom \\\" id=\\\"subject\\\" name=\\\"subject\\\"\\n                    value=\\\"{{issue?.subject}}\\\">\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"description\\\" class=\\\"control-label\\\">Description</label>\\n            <div>\\n                <textarea class=\\\"form-control-custom form-control\\\" [(ngModel)]=\\\"issue.description\\\" rows=\\\"5\\\" type=\\\"text\\\"></textarea>\\n            </div>\\n        </div>\\n\\n\\n        <button type=\\\"button\\\" [disabled]=\\\"submitted\\\" class=\\\"btn btn-primary-outline\\\" (click)=\\\"submit()\\\">Submit</button>\\n     </div>\\n</p-sidebar>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/shared/issues-report.component.html\n// module id = 181\n// module chunks = 1 2 3","import { ModuleWithProviders, NgModule } from \"@angular/core\";\nimport { HumanizePipe } from \"./HumanizePipe\";\n\n@NgModule({\n    imports:        [],\n    declarations:   [HumanizePipe],\n    exports:        [HumanizePipe],\n})\nexport class PipeModule {\n\n    public static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: PipeModule,\n            providers: [],\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./ClientApp/app/pipes/pipe.module.ts","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n    name: \"humanize\",\n})\nexport class HumanizePipe implements PipeTransform  {\n    public transform(value: string) {\n        if ((typeof value) !== \"string\") {\n            return value;\n        }\n        value = value.split(/(?=[A-Z])/).join(\" \");\n        value = value[0].toUpperCase() + value.slice(1);\n        return value;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./ClientApp/app/pipes/HumanizePipe.ts","module.exports = (__webpack_require__(1))(978);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/ngx-order-pipe/ngx-order-pipe.es5.js from dll-reference vendor_a449fdf94c391aac3fe0\n// module id = 184\n// module chunks = 3 4","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { AuthService } from \"../auth/auth.service\";\nimport { IssuesService, NotificationService, SettingsService } from \"../services\";\n\nimport { IIssues, IIssuesChat, IIssueSettings, INewIssueComments, IssueStatus } from \"../interfaces\";\n\n@Component({\n    template: require('./issueDetails.component.html'),\n    styles: [require('./issueDetails.component.scss')],\n})\nexport class IssueDetailsComponent implements OnInit {\n\n    public issue: IIssues;\n    public comments: IIssuesChat[];\n    public newComment: INewIssueComments = {\n        comment: \"\",\n        issueId: 0,\n    };\n\n    public IssueStatus = IssueStatus;\n    public isAdmin: boolean;\n    public settings: IIssueSettings;\n    \n    private issueId: number;\n\n    constructor(private issueService: IssuesService,\n                private route: ActivatedRoute,\n                private authService: AuthService,\n                private settingsService: SettingsService,\n                private notificationService: NotificationService) { \n            this.route.params\n            .subscribe((params: any) => {\n                  this.issueId = parseInt(params.id);    \n                });\n\n            this.isAdmin = this.authService.hasRole(\"Admin\") || this.authService.hasRole(\"PowerUser\");\n            this.settingsService.getIssueSettings().subscribe(x => this.settings = x);\n        }\n                \n    public ngOnInit() { \n        this.issueService.getIssue(this.issueId).subscribe(x => {\n            this.issue = {\n                comments: x.comments,\n                id: x.id,\n                issueCategory: x.issueCategory,\n                issueCategoryId: x.issueCategoryId,\n                subject: x.subject,\n                description: x.description,\n                status:x.status,\n                resolvedDate:x.resolvedDate,\n                title: x.title,\n                requestType: x.requestType,\n                requestId: x.requestId,\n                providerId: x.providerId,\n                userReported: x.userReported,\n            };\n        });\n        \n        this.loadComments();\n    }\n\n    public addComment() {\n        this.newComment.issueId = this.issueId;\n        this.issueService.addComment(this.newComment).subscribe(x => {\n            this.loadComments();\n        });\n    }\n\n    public inProgress() {\n        this.issueService.updateStatus({issueId: this.issueId, status: IssueStatus.InProgress}).subscribe(x => {\n            this.notificationService.success(\"Marked issue as In Progress\");\n            this.issue.status = IssueStatus.InProgress;\n        });\n    }\n\n    public resolve() {\n        this.issueService.updateStatus({issueId: this.issueId, status: IssueStatus.Resolved}).subscribe(x => {\n            this.notificationService.success(\"Marked issue as Resolved\");\n            this.issue.status = IssueStatus.Resolved;\n        });\n    }\n\n    private loadComments() {\n        this.issueService.getComments(this.issueId).subscribe(x => this.comments = x);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./ClientApp/app/issues/issueDetails.component.ts","module.exports = \"<div *ngIf=\\\"issue\\\">\\n    <h1>{{issue.title}} </h1>\\n    <div class=\\\"col-md-6\\\">\\n            <span class=\\\"label label-info\\\">{{IssueStatus[issue.status]}}</span>\\n            <span class=\\\"label label-success\\\">{{issue.issueCategory.value}}</span>\\n        \\n            <h3 *ngIf=\\\"issue.userReported?.alias\\\">{{'Issues.ReportedBy' | translate}}: {{issue.userReported.alias}}</h3>\\n            <h3 *ngIf=\\\"!issue.userReported?.alias\\\">{{'Issues.ReportedBy' | translate}}: {{issue.userReported.userName}}</h3>\\n        <h3 *ngIf=\\\"issue.subject\\\">{{'Issues.Subject' | translate}}: {{issue.subject}}</h3>\\n<br>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"description\\\" class=\\\"control-label\\\" [translate]=\\\"'Issues.Description'\\\"></label>\\n            <div>\\n                <textarea class=\\\"form-control-custom form-control\\\" disabled=\\\"disabled\\\" [(ngModel)]=\\\"issue.description\\\" rows=\\\"5\\\" type=\\\"text\\\"></textarea>\\n            </div>\\n        </div>\\n\\n\\n\\n    </div>\\n\\n\\n    <div class=\\\"row chat-window col-xs-7 col-md-5\\\" id=\\\"chat_window_1\\\" style=\\\"margin-left:10px;\\\">\\n        <div class=\\\"col-xs-12 col-md-12\\\">\\n            <div class=\\\"panel panel-default\\\">\\n                <div class=\\\"panel-heading top-bar\\\">\\n                    <div class=\\\"col-md-8 col-xs-8\\\">\\n                        <h3 class=\\\"panel-title\\\">\\n                            <span class=\\\"glyphicon glyphicon-comment\\\"></span> {{'Issues.Comments' | translate}}</h3>\\n                    </div>\\n                </div>\\n\\n                <div *ngIf=\\\"comments\\\" class=\\\"panel-body msg_container_base\\\">\\n                    <div *ngIf=\\\"comments.length <= 0\\\" class=\\\"row msg_container base_receive\\\">\\n                        <div class=\\\"col-md-10 col-xs-10\\\">\\n                            <div class=\\\"messages msg_sent\\\">\\n                                <p [translate]=\\\"'Issues.NoComments'\\\"></p>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div *ngFor=\\\"let comment of comments\\\" class=\\\"row msg_container\\\" [ngClass]=\\\"{'base_sent': comment.adminComment, 'base_receive': !comment.adminComment}\\\">\\n                        <div class=\\\"col-md-10 col-xs-10\\\">\\n                            <div class=\\\"messages msg_sent\\\">\\n                                <p>{{comment.comment}}</p>\\n                                <time>{{comment.username}} • {{comment.date | date:'short'}}</time>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n                <div class=\\\"panel-footer\\\">\\n                    <div class=\\\"input-group\\\">\\n                        <input id=\\\"btn-input\\\" type=\\\"text\\\" class=\\\"form-control input-sm chat_input\\\" [(ngModel)]=\\\"newComment.comment\\\"  [attr.placeholder]=\\\"'Issues.WriteMessagePlaceholder' | translate\\\"\\n                        />\\n                        <span class=\\\"input-group-btn\\\">\\n                            <button class=\\\"btn btn-primary btn-sm\\\" id=\\\"btn-chat\\\" (click)=\\\"addComment()\\\" [translate]=\\\"'Issues.SendMessageButton'\\\"></button>\\n                        </span>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"col-md-12\\\">\\n        <div *ngIf=\\\"isAdmin && settings\\\">\\n            <div *ngIf=\\\"issue.status === IssueStatus.Pending && settings.enableInProgress\\\">\\n                <button class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"inProgress()\\\" [translate]=\\\"'Issues.MarkInProgress'\\\"></button>\\n            </div>\\n            <div *ngIf=\\\"issue.status === IssueStatus.Pending && !settings.enableInProgress || issue.status == IssueStatus.InProgress\\\">\\n                <button class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"resolve()\\\" [translate]=\\\"'Issues.MarkResolved'\\\"></button>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/issues/issueDetails.component.html\n// module id = 189\n// module chunks = 3","\n        var result = require(\"!!../../../node_modules/css-loader/index.js?-url&minimize!../../../node_modules/sass-loader/lib/loader.js!./issueDetails.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/issues/issueDetails.component.scss\n// module id = 190\n// module chunks = 3","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body{height:400px;position:fixed;bottom:0}.col-md-2,.col-md-10{padding:0}.panel{margin-bottom:0}.chat-window{float:right;margin-left:10px}.chat-window>div>.panel{border-radius:5px 5px 0 0}.icon_minim{padding:2px 10px}.msg_container_base{background:#e5e5e5;margin:0;padding:0 10px 10px;max-height:300px;overflow-x:hidden}.top-bar{background:#424242;color:#fff;padding:10px;position:relative;overflow:hidden}.msg_receive{padding-left:0;margin-left:0}.msg_sent{padding-bottom:20px!important;margin-right:0}.messages{background:#fff;padding:10px;border-radius:2px;box-shadow:0 1px 2px rgba(0,0,0,.2);max-width:100%;color:#000}.messages>p{font-size:13px;margin:0 0 .2rem}.messages>time{font-size:11px;color:#ccc}.msg_container{padding:10px;overflow:hidden;display:flex}img{display:block;width:100%}.avatar{position:relative}.base_receive>.avatar:after{content:\\\"\\\";position:absolute;top:0;right:0;width:0;height:0;border:5px solid #fff;border-left-color:transparent;border-bottom-color:transparent}.base_sent{justify-content:flex-end;align-items:flex-end}.base_sent>.avatar:after{content:\\\"\\\";position:absolute;bottom:0;left:0;width:0;height:0;border:5px solid #fff;border-right-color:transparent;border-top-color:transparent;box-shadow:0 1px 0 rgba(0,0,0,.1)}.msg_sent>time{float:right}.msg_container_base::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3);background-color:#f5f5f5}.msg_container_base::-webkit-scrollbar{width:12px;background-color:#f5f5f5}.msg_container_base::-webkit-scrollbar-thumb{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.3);background-color:#555}.btn-group.dropup{position:fixed;left:0;bottom:0}.panel-footer{padding:10px 15px;background-color:#424242;border-top:1px solid transparent;border-bottom-right-radius:-1;border-bottom-left-radius:-1}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?-url&minimize!./node_modules/sass-loader/lib/loader.js!./ClientApp/app/issues/issueDetails.component.scss\n// module id = 191\n// module chunks = 3","import { Component, OnInit } from \"@angular/core\";\n\nimport { IssuesService } from \"../services\";\n\nimport { IIssueCount, IIssues, IPagenator, IssueStatus } from \"../interfaces\";\n\n@Component({\n    template: require('./issues.component.html'),\n})\nexport class IssuesComponent implements OnInit {\n\n    public pendingIssues: IIssues[];\n    public inProgressIssues: IIssues[];\n    public resolvedIssues: IIssues[];\n\n    public count: IIssueCount;\n\n    private takeAmount = 10;\n    private pendingSkip = 0;\n    private inProgressSkip = 0;\n    private resolvedSkip = 0;\n\n    constructor(private issueService: IssuesService) { }\n\n    public ngOnInit() { \n        this.getPending();      \n        this.getInProg();\n        this.getResolved();\n        this.issueService.getIssuesCount().subscribe(x => this.count = x);\n    }\n\n    public changePagePending(event: IPagenator) {\n        this.pendingSkip = event.first;\n        this.getPending();\n    }\n\n    public changePageInProg(event: IPagenator) {\n        this.inProgressSkip = event.first;\n        this.getInProg();\n    }\n\n    public changePageResolved(event: IPagenator) {\n        this.resolvedSkip = event.first;\n        this.getResolved();\n    }\n\n    private getPending() {\n        this.issueService.getIssuesPage(this.takeAmount, this.pendingSkip, IssueStatus.Pending).subscribe(x => {\n            this.pendingIssues = x;\n        });\n    }\n\n    private getInProg() {\n        this.issueService.getIssuesPage(this.takeAmount, this.inProgressSkip, IssueStatus.InProgress).subscribe(x => {\n            this.inProgressIssues = x;\n        });\n    }\n\n    private getResolved() {\n        this.issueService.getIssuesPage(this.takeAmount, this.resolvedSkip, IssueStatus.Resolved).subscribe(x => {\n            this.resolvedIssues = x;\n        });\n    }\n    \n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./ClientApp/app/issues/issues.component.ts","module.exports = \"<h1 id=\\\"issuesTitle\\\" [translate]=\\\"'Issues.Title'\\\"></h1>\\n\\n<ngb-tabset *ngIf=\\\"count\\\">\\n    <ngb-tab *ngIf=\\\"count.pending > 0\\\">\\n       <ng-template ngbTabTitle>{{'Issues.PendingTitle' | translate}} <span class=\\\"badge\\\">{{count.pending}}</span></ng-template>\\n        <ng-template ngbTabContent>\\n            <div *ngIf=\\\"pendingIssues\\\">\\n                <issues-table [issues]=\\\"pendingIssues\\\"  (changePage)=\\\"changePagePending($event)\\\" [totalRecords]=\\\"count.pending\\\"></issues-table>\\n            </div>\\n        </ng-template>\\n    </ngb-tab>\\n    <ngb-tab *ngIf=\\\"count.inProgress > 0\\\">\\n       <ng-template ngbTabTitle>{{'Issues.InProgressTitle' | translate}} <span class=\\\"badge\\\">{{count.inProgress}}</span></ng-template>\\n        <ng-template ngbTabContent>\\n            <div *ngIf=\\\"inProgressIssues\\\">\\n                <issues-table [issues]=\\\"inProgressIssues\\\" (changePage)=\\\"changePageInProg($event)\\\" [totalRecords]=\\\"count.inProgress\\\"></issues-table>\\n            </div>\\n        </ng-template>\\n    </ngb-tab>\\n    <ngb-tab *ngIf=\\\"count.resolved > 0\\\">\\n            <ng-template ngbTabTitle>{{'Issues.ResolvedTitle' | translate}} <span class=\\\"badge\\\">{{count.resolved}}</span></ng-template>\\n        <ng-template ngbTabContent>\\n            <div *ngIf=\\\"resolvedIssues\\\">\\n                <issues-table [issues]=\\\"resolvedIssues\\\" (changePage)=\\\"changePageResolved($event)\\\" [totalRecords]=\\\"count.resolved\\\"></issues-table>\\n            </div>\\n        </ng-template>\\n    </ngb-tab>\\n</ngb-tabset>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/issues/issues.component.html\n// module id = 193\n// module chunks = 3","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { IIssues, IPagenator, IssueStatus } from \"./../interfaces\";\n\n@Component({\n    selector: \"issues-table\",\n    template: require('./issuestable.component.html'),\n})\nexport class IssuesTableComponent  {\n\n    @Input() public issues: IIssues[];\n    @Input() public totalRecords: number;\n\n    @Output() public changePage = new EventEmitter<IPagenator>(); \n\n    public IssueStatus = IssueStatus;\n\n    public order: string = \"id\";\n    public reverse = false;\n\n    public rowCount = 10;\n\n    public setOrder(value: string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n    \n        this.order = value;\n      }\n\n      public paginate(event: IPagenator) {\n        //event.first = Index of the first record (current index)\n        //event.rows = Number of rows to display in new page\n        //event.page = Index of the new page\n        //event.pageCount = Total number of pages\n        \n        this.changePage.emit(event);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./ClientApp/app/issues/issuestable.component.ts","module.exports = \"<table class=\\\"table table-striped table-hover table-responsive table-condensed\\\">\\n        <thead>\\n            <tr>\\n                <th (click)=\\\"setOrder('title')\\\">\\n                    <a [translate]=\\\"'Issues.ColumnTitle'\\\"></a>\\n                    <span *ngIf=\\\"order === 'title'\\\">\\n                        <span [hidden]=\\\"reverse\\\"><i class=\\\"fa fa-arrow-down\\\" aria-hidden=\\\"true\\\"></i></span><span [hidden]=\\\"!reverse\\\"><i class=\\\"fa fa-arrow-up\\\" aria-hidden=\\\"true\\\"></i></span>\\n                    </span>\\n                </th>\\n                <th (click)=\\\"setOrder('issueCategory.value')\\\">\\n                    <a [translate]=\\\"'Issues.Category'\\\"></a>\\n                    <span *ngIf=\\\"order === 'issueCategory.value'\\\">\\n                            <span [hidden]=\\\"reverse\\\"><i class=\\\"fa fa-arrow-down\\\" aria-hidden=\\\"true\\\"></i></span><span [hidden]=\\\"!reverse\\\"><i class=\\\"fa fa-arrow-up\\\" aria-hidden=\\\"true\\\"></i></span>\\n                    </span>\\n                </th>\\n                <th (click)=\\\"setOrder('issue.status')\\\">\\n                    <a [translate]=\\\"'Issues.Status'\\\"></a>\\n                    <span *ngIf=\\\"order === 'issue.status'\\\">\\n                            <span [hidden]=\\\"reverse\\\"><i class=\\\"fa fa-arrow-down\\\" aria-hidden=\\\"true\\\"></i></span><span [hidden]=\\\"!reverse\\\"><i class=\\\"fa fa-arrow-up\\\" aria-hidden=\\\"true\\\"></i></span>\\n                    </span>\\n                </th>\\n                <th (click)=\\\"setOrder('issue.reportedUser')\\\">\\n                    <a [translate]=\\\"'Issues.ReportedBy'\\\"></a>\\n                    <span *ngIf=\\\"order === 'issue.reportedUser'\\\">\\n                            <span [hidden]=\\\"reverse\\\"><i class=\\\"fa fa-arrow-down\\\" aria-hidden=\\\"true\\\"></i></span><span [hidden]=\\\"!reverse\\\"><i class=\\\"fa fa-arrow-up\\\" aria-hidden=\\\"true\\\"></i></span>\\n                    </span>\\n                </th>\\n                <th>\\n                </th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let issue of issues | orderBy: order : reverse : 'case-insensitive'\\\">\\n                <td>\\n                    {{issue.title}}\\n                </td>\\n                <td>\\n                    {{issue.issueCategory.value}}\\n                </td>\\n                <td>\\n                    {{IssueStatus[issue.status] | humanize}}\\n                </td>\\n                <td *ngIf=\\\"issue.userReported?.alias\\\">\\n                    {{issue.userReported.alias}}\\n                </td>\\n                <td *ngIf=\\\"!issue.userReported?.alias\\\">\\n                    {{issue.userReported.userName}}\\n                </td>\\n                <td>\\n                        <a [routerLink]=\\\"['/issues/' + issue.id]\\\" class=\\\"btn btn-sm btn-info-outline\\\" [translate]=\\\"'Issues.Details'\\\"></a>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n    <p-paginator [rows]=\\\"rowCount\\\" [totalRecords]=\\\"totalRecords\\\" (onPageChange)=\\\"paginate($event)\\\"></p-paginator>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/issues/issuestable.component.html\n// module id = 195\n// module chunks = 3"],"sourceRoot":""}