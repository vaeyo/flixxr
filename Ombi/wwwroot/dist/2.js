webpackJsonp([2],{171:function(e,t,s){"use strict";var n=this&&this.__decorate||function(e,t,s,n){var a,i=arguments.length,r=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,s):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,s,n);else for(var o=e.length-1;o>=0;o--)(a=e[o])&&(r=(i<3?a(r):i>3?a(t,s,r):a(t,s))||r);return i>3&&r&&Object.defineProperty(t,s,r),r};Object.defineProperty(t,"__esModule",{value:!0});var a=s(2),i=s(0),r=s(7),o=s(10),l=s(92),c=s(284),u=s(286),d=s(288),p=s(290),v=s(294),h=s(89),b=s(3),f=s(3),g=s(93),m=s(179),y=[{path:"",component:d.SearchComponent,canActivate:[g.AuthGuard]},{path:"show/:id",component:p.SeriesInformationComponent,canActivate:[g.AuthGuard]}],S=function(){function e(){}return e=n([i.NgModule({imports:[a.CommonModule,r.FormsModule,o.RouterModule.forChild(y),l.NgbModule.forRoot(),h.TreeTableModule,m.SharedModule,h.SidebarModule],declarations:[d.SearchComponent,c.MovieSearchComponent,v.TvSearchComponent,p.SeriesInformationComponent,u.MovieSearchGridComponent],exports:[o.RouterModule],providers:[f.SearchService,b.RequestService]})],e)}();t.SearchModule=S},172:function(e,t,s){"use strict";function n(e){for(var s in e)t.hasOwnProperty(s)||(t[s]=e[s])}Object.defineProperty(t,"__esModule",{value:!0}),n(s(173)),n(s(174)),n(s(175)),n(s(176))},173:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.Email=0]="Email",e[e.Discord=1]="Discord",e[e.Pushbullet=2]="Pushbullet",e[e.Pushover=3]="Pushover",e[e.Telegram=4]="Telegram"}(t.NotificationAgent||(t.NotificationAgent={})),function(e){e[e.NewRequest=0]="NewRequest",e[e.Issue=1]="Issue",e[e.RequestAvailable=2]="RequestAvailable",e[e.RequestApproved=3]="RequestApproved",e[e.AdminNote=4]="AdminNote",e[e.Test=5]="Test",e[e.RequestDeclined=6]="RequestDeclined",e[e.ItemAddedToFaultQueue=7]="ItemAddedToFaultQueue",e[e.WelcomeEmail=8]="WelcomeEmail",e[e.IssueResolved=9]="IssueResolved"}(t.NotificationType||(t.NotificationType={}))},174:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.movie=1]="movie",e[e.tvShow=2]="tvShow"}(t.RequestType||(t.RequestType={})),function(e){e[e.None=0]="None",e[e.Available=1]="Available",e[e.NotAvailable=2]="NotAvailable",e[e.Approved=3]="Approved",e[e.Processing=4]="Processing",e[e.PendingApproval=5]="PendingApproval"}(t.FilterType||(t.FilterType={}))},175:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.LocalUser=1]="LocalUser",e[e.PlexUser=2]="PlexUser",e[e.EmbyUser=3]="EmbyUser"}(t.UserType||(t.UserType={}))},176:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.Pending=0]="Pending",e[e.InProgress=1]="InProgress",e[e.Resolved=2]="Resolved"}(t.IssueStatus||(t.IssueStatus={}))},177:function(e,t,s){e.exports=s(1)(794)},178:function(e,t,s){e.exports=s(1)(803)},179:function(e,t,s){"use strict";var n=this&&this.__decorate||function(e,t,s,n){var a,i=arguments.length,r=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,s):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,s,n);else for(var o=e.length-1;o>=0;o--)(a=e[o])&&(r=(i<3?a(r):i>3?a(t,s,r):a(t,s))||r);return i>3&&r&&Object.defineProperty(t,s,r),r};Object.defineProperty(t,"__esModule",{value:!0});var a=s(2),i=s(0),r=s(7),o=s(19),l=s(180),c=s(89),u=function(){function e(){}return e=n([i.NgModule({declarations:[l.IssuesReportComponent],imports:[c.SidebarModule,r.FormsModule,a.CommonModule],exports:[o.TranslateModule,a.CommonModule,r.FormsModule,c.SidebarModule,l.IssuesReportComponent]})],e)}();t.SharedModule=u},180:function(e,t,s){"use strict";var n=this&&this.__decorate||function(e,t,s,n){var a,i=arguments.length,r=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,s):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,s,n);else for(var o=e.length-1;o>=0;o--)(a=e[o])&&(r=(i<3?a(r):i>3?a(t,s,r):a(t,s))||r);return i>3&&r&&Object.defineProperty(t,s,r),r},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=s(0),r=s(172),o=s(3),l=function(){function e(e,t){this.issueService=e,this.notification=t,this.visibleChange=new i.EventEmitter,this.submitted=!1,this.issue={subject:"",description:"",issueCategory:{value:"",id:0},status:r.IssueStatus.Pending,resolvedDate:void 0,id:void 0,issueCategoryId:0,comments:[],requestId:void 0,requestType:r.RequestType.movie,title:"",providerId:"",userReported:void 0}}return Object.defineProperty(e.prototype,"getTitle",{get:function(){return this.title},enumerable:!0,configurable:!0}),e.prototype.submit=function(){var e=this;this.submitted=!0;var t=this.issue;t.requestId=this.id,t.issueCategory=this.issueCategory,t.issueCategoryId=this.issueCategory.id,t.title=this.title,t.providerId=this.providerId,this.movie?t.requestType=r.RequestType.movie:t.requestType=r.RequestType.tvShow,this.issueService.createIssue(t).subscribe(function(t){t&&e.notification.success("Issue Created")})},e.prototype.hide=function(){this.submitted=!1,this.visible=!this.visible,this.visibleChange.emit(this.visible)},n([i.Input(),a("design:type",Boolean)],e.prototype,"visible",void 0),n([i.Input(),a("design:type",Number)],e.prototype,"id",void 0),n([i.Input(),a("design:type",String)],e.prototype,"title",void 0),n([i.Input(),a("design:type",Object)],e.prototype,"issueCategory",void 0),n([i.Input(),a("design:type",Boolean)],e.prototype,"movie",void 0),n([i.Input(),a("design:type",String)],e.prototype,"providerId",void 0),n([i.Output(),a("design:type",Object)],e.prototype,"visibleChange",void 0),e=n([i.Component({selector:"issue-report",template:s(181)}),a("design:paramtypes",[o.IssuesService,o.NotificationService])],e)}();t.IssuesReportComponent=l},181:function(e,t){e.exports='<p-sidebar [(visible)]="visible" position="right" styleClass="ui-sidebar-md side-back" (onHide)="hide()">\n    <div *ngIf="title">\n\n       \n        <h3>Reporting an Issue for "{{title}}"</h3>\n\n        <h4 *ngIf="issueCategory">Issue type: {{issueCategory.value}}</h4>\n\n        <div class="form-group">\n            <label for="subject" class="control-label">Subject</label>\n            <div>\n                <input type="text" [(ngModel)]="issue.subject" class="form-control form-control-custom " id="subject" name="subject"\n                    value="{{issue?.subject}}">\n            </div>\n        </div>\n\n        <div class="form-group">\n            <label for="description" class="control-label">Description</label>\n            <div>\n                <textarea class="form-control-custom form-control" [(ngModel)]="issue.description" rows="5" type="text"></textarea>\n            </div>\n        </div>\n\n\n        <button type="button" [disabled]="submitted" class="btn btn-primary-outline" (click)="submit()">Submit</button>\n     </div>\n</p-sidebar>\n'},185:function(e,t,s){e.exports=s(1)(920)},186:function(e,t,s){var n=s(187);e.exports="string"==typeof n?n:n.toString()},187:function(e,t,s){(e.exports=s(12)(!1)).push([e.i,"th{text-align:left!important}",""])},284:function(e,t,s){"use strict";var n=this&&this.__assign||Object.assign||function(e){for(var t,s=1,n=arguments.length;s<n;s++)for(var a in t=arguments[s])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},a=this&&this.__decorate||function(e,t,s,n){var a,i=arguments.length,r=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,s):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,s,n);else for(var o=e.length-1;o>=0;o--)(a=e[o])&&(r=(i<3?a(r):i>3?a(t,s,r):a(t,s))||r);return i>3&&r&&Object.defineProperty(t,s,r),r},i=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var r=s(0),o=s(13),l=s(19);s(177),s(178),s(91);var c=s(90),u=s(15),d=s(3),p=function(){function e(e,t,s,n,a,i){var r=this;this.searchService=e,this.requestService=t,this.notificationService=s,this.authService=n,this.translate=a,this.sanitizer=i,this.searchChanged=new c.Subject,this.searchApplied=!1,this.issuesBarVisible=!1,this.searchChanged.debounceTime(600).distinctUntilChanged().subscribe(function(e){r.searchText=e,""!==r.searchText?r.searchService.searchMovie(r.searchText).subscribe(function(e){r.movieResults=e,r.searchApplied=!0,r.getExtraInfo()}):r.clearResults()})}return e.prototype.ngOnInit=function(){this.searchText="",this.movieResults=[],this.result={message:"",result:!1,errorMessage:""}},e.prototype.search=function(e){this.searchChanged.next(e.target.value)},e.prototype.request=function(e){var t=this;e.requested=!0,e.requestProcessing=!0,(this.authService.hasRole("admin")||this.authService.hasRole("AutoApproveMovie"))&&(e.approved=!0);try{this.requestService.requestMovie({theMovieDbId:e.id}).subscribe(function(s){t.result=s,t.result.result?t.translate.get("Search.RequestAdded",{title:e.title}).subscribe(function(s){t.notificationService.success(s),e.processed=!0}):(t.result.errorMessage&&t.result.message?t.notificationService.warning("Request Added",t.result.message+" - "+t.result.errorMessage):t.notificationService.warning("Request Added",t.result.message?t.result.message:t.result.errorMessage),e.requested=!1,e.approved=!1,e.processed=!1,e.requestProcessing=!1)})}catch(t){e.processed=!1,e.requestProcessing=!1,this.notificationService.error(t)}},e.prototype.popularMovies=function(){var e=this;this.clearResults(),this.searchService.popularMovies().subscribe(function(t){e.movieResults=t,e.getExtraInfo()})},e.prototype.nowPlayingMovies=function(){var e=this;this.clearResults(),this.searchService.nowPlayingMovies().subscribe(function(t){e.movieResults=t,e.getExtraInfo()})},e.prototype.topRatedMovies=function(){var e=this;this.clearResults(),this.searchService.topRatedMovies().subscribe(function(t){e.movieResults=t,e.getExtraInfo()})},e.prototype.upcomingMovies=function(){var e=this;this.clearResults(),this.searchService.upcomingMovies().subscribe(function(t){e.movieResults=t,e.getExtraInfo()})},e.prototype.reportIssue=function(e,t){this.issueRequestId=t.id,this.issueRequestTitle=t.title,this.issueCategorySelected=e,this.issuesBarVisible=!0,this.issueProviderId=t.id.toString()},e.prototype.getExtraInfo=function(){var e=this;this.movieResults.forEach(function(t,s){t.background=e.sanitizer.bypassSecurityTrustStyle("url(https://image.tmdb.org/t/p/w1280"+t.backdropPath+")"),e.searchService.getMovieInformation(t.id).subscribe(function(s){e.updateItem(t,s)})})},e.prototype.updateItem=function(e,t){var s=this.movieResults.indexOf(e,0);if(s>-1){var a=n({},this.movieResults[s]);this.movieResults[s]=t,this.movieResults[s].background=a.background}},e.prototype.clearResults=function(){this.movieResults=[],this.searchApplied=!1},a([r.Input(),i("design:type",Array)],e.prototype,"issueCategories",void 0),a([r.Input(),i("design:type",Boolean)],e.prototype,"issuesEnabled",void 0),e=a([r.Component({selector:"movie-search",template:s(285)}),i("design:paramtypes",[d.SearchService,d.RequestService,d.NotificationService,u.AuthService,l.TranslateService,o.DomSanitizer])],e)}();t.MovieSearchComponent=p},285:function(e,t){e.exports='\x3c!-- Movie tab --\x3e\n<div role="tabpanel" class="tab-pane active" id="MoviesTab">\n    <div class="input-group">\n        <input id="search" type="text" class="form-control form-control-custom form-control-search form-control-withbuttons" (keyup)="search($event)">\n        <div class="input-group-addon right-radius">\n            <div class="btn-group">\n                <a href="#" class="btn btn-sm btn-primary-outline dropdown-toggle" data-toggle="dropdown" aria-expanded="false">\n                    {{ \'Search.Suggestions\' | translate }}\n                    <i class="fa fa-chevron-down"></i>\n                </a>\n                <ul class="dropdown-menu">\n                    <li><a (click)="popularMovies()" [translate]="\'Search.Movies.PopularMovies\'"></a></li>\n                    <li><a (click)="upcomingMovies()" [translate]="\'Search.Movies.UpcomingMovies\'"></a></li>\n                    <li><a (click)="topRatedMovies()" [translate]="\'Search.Movies.TopRatedMovies\'"></a></li>\n                    <li><a (click)="nowPlayingMovies()" [translate]="\'Search.Movies.NowPlayingMovies\'"></a></li>\n                </ul>\n            </div>\n            <i class="fa fa-search"></i>\n        </div>\n    </div>\n    <br />\n    <br />\n    \x3c!-- Movie content --\x3e\n    <div id="movieList">\n        <div *ngIf="searchApplied && movieResults?.length <= 0" class=\'no-search-results\'>\n            <i class=\'fa fa-film no-search-results-icon\'></i><div class=\'no-search-results-text\' [translate]="\'Search.NoResults\'"></div>\n        </div>\n\n        <div *ngFor="let result of movieResults">\n        \n            <div class="row" >\n                \n                    <div class="myBg backdrop" [style.background-image]="result.background"></div>\n                    <div class="tint" style="background-image: linear-gradient(to bottom, rgba(0,0,0,0.6) 0%,rgba(0,0,0,0.6) 100%);"></div>\n                <div class="col-sm-2 small-padding">\n                    <img *ngIf="result.posterPath"  class="img-responsive poster" src="https://image.tmdb.org/t/p/w300/{{result.posterPath}}" alt="poster">\n\n                </div>\n                <div class="col-sm-8 small-padding">\n                    <div>\n                        <a href="https://www.themoviedb.org/movie/{{result.id}}/" target="_blank">\n                            <h4>{{result.title}} ({{result.releaseDate | date: \'yyyy\'}})</h4>\n                        </a>\n<span class="tags">\n                        <span *ngIf="result.releaseDate" class="label label-info" id="releaseDateLabel" target="_blank">{{ \'Search.ReleaseDate\' | translate }} {{result.releaseDate | date: \'dd/MM/yyyy\'}}</span>\n\n                        <a *ngIf="result.homepage" href="{{result.homepage}}" id="homePageLabel" target="_blank"><span class="label label-info" [translate]="\'Search.Movies.HomePage\'"></span></a>\n\n                        <a *ngIf="result.trailer" href="{{result.trailer}}" id="trailerLabel" target="_blank"><span class="label label-info" [translate]="\'Search.Movies.Trailer\'"></span></a>\n                        <span *ngIf="result.quality" id="qualityLabel" class="label label-success">{{result.quality}}p</span>\n                        \n                        <ng-template [ngIf]="result.available"><span class="label label-success" id="availableLabel" [translate]="\'Common.Available\'"></span></ng-template>\n                        <ng-template [ngIf]="result.approved && !result.available"><span class="label label-info" id="processingRequestLabel" [translate]="\'Common.ProcessingRequest\'"></span></ng-template>\n                        <ng-template [ngIf]="result.requested && !result.approved && !result.available"><span class="label label-warning" id="pendingApprovalLabel" [translate]="\'Common.PendingApproval\'"></span></ng-template>\n                        <ng-template [ngIf]="!result.requested && !result.available && !result.approved"><span class="label label-danger" id="notRequestedLabel" [translate]="\'Common.NotRequested\'"></span></ng-template>\n\n\n                    </span>\n\n                        <br/>\n                    </div>\n                    <p style="font-size: 0.9rem !important">{{result.overview}}</p>\n                </div>\n\n\n                <div class="col-sm-2 small-padding">\n\n                    <div *ngIf="result.available">\n                        <button style="text-align: right" class="btn btn-success-outline disabled" disabled><i class="fa fa-check"></i> {{ \'Common.Available\' | translate }}</button>\n                    </div>\n                    <div *ngIf="!result.available">\n                    <div *ngIf="result.requested || result.approved; then requestedBtn else notRequestedBtn"></div>\n                    <ng-template #requestedBtn>\n                        <button style="text-align: right" class="btn btn-primary-outline disabled" [disabled]><i class="fa fa-check"></i> {{ \'Common.Requested\' | translate }}</button>\n                    </ng-template>\n                    <ng-template #notRequestedBtn>\n                        <button id="{{result.id}}" style="text-align: right" class="btn btn-primary-outline" (click)="request(result)">\n                            <i *ngIf="result.requestProcessing" class="fa fa-circle-o-notch fa-spin fa-fw"></i> <i *ngIf="!result.requestProcessing && !result.processed" class="fa fa-plus"></i>\n                            <i *ngIf="result.processed && !result.requestProcessing" class="fa fa-check"></i>{{ \'Common.Request\' | translate }}</button>\n                    </ng-template>\n                        </div>\n\n                    <br/>\n                    <div *ngIf="result.available">\n                        <a *ngIf="result.plexUrl" style="text-align: right" class="btn btn-sm btn-success-outline" href="{{result.plexUrl}}" target="_blank"><i class="fa fa-eye"></i> View On Plex</a>\n                    </div>\n                    <div class="dropdown" *ngIf="result.available && issueCategories && issuesEnabled">\n                        <button class="btn btn-sm btn-primary-outline dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">\n                            <i class="fa fa-plus"></i> Report Issue\n                            <span class="caret"></span>\n                        </button>\n                        <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">\n                            <li *ngFor="let cat of issueCategories"><a [routerLink]="" (click)="reportIssue(cat, result)">{{cat.value}}</a></li>\n                        </ul>\n                    </div>\n\n                </div>\n\n            </div>\n            <br/>\n            <br/>\n        </div>\n\n    </div>\n</div>\n\n\n<issue-report [movie]="true" [visible]="issuesBarVisible" (visibleChange)="issuesBarVisible = $event;" [title]="issueRequestTitle"\n[issueCategory]="issueCategorySelected" [id]="issueRequestId" [providerId]="issueProviderId"></issue-report>\n'},286:function(e,t,s){"use strict";var n=this&&this.__decorate||function(e,t,s,n){var a,i=arguments.length,r=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,s):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,s,n);else for(var o=e.length-1;o>=0;o--)(a=e[o])&&(r=(i<3?a(r):i>3?a(t,s,r):a(t,s))||r);return i>3&&r&&Object.defineProperty(t,s,r),r},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=s(0);s(177),s(178),s(91);var r=s(90),o=s(15),l=s(3),c=function(){function e(e,t,s,n){var a=this;this.searchService=e,this.requestService=t,this.notificationService=s,this.authService=n,this.searchChanged=new r.Subject,this.movieResultGrid=[],this.searchApplied=!1,this.searchChanged.debounceTime(600).distinctUntilChanged().subscribe(function(e){a.searchText=e,""!==a.searchText?a.searchService.searchMovie(a.searchText).subscribe(function(e){a.movieResults=e,a.searchApplied=!0,a.getExtaInfo()}):a.clearResults()})}return e.prototype.ngOnInit=function(){this.searchText="",this.movieResults=[],this.result={message:"",result:!1,errorMessage:""}},e.prototype.search=function(e){this.searchChanged.next(e.target.value)},e.prototype.request=function(e){var t=this;e.requested=!0,e.requestProcessing=!0,(this.authService.hasRole("admin")||this.authService.hasRole("AutoApproveMovie"))&&(e.approved=!0);try{this.requestService.requestMovie({theMovieDbId:e.id}).subscribe(function(s){t.result=s,t.result.result?(t.notificationService.success("Request for "+e.title+" has been added successfully"),e.processed=!0):(t.result.errorMessage&&t.result.message?t.notificationService.warning("Request Added",t.result.message+" - "+t.result.errorMessage):t.notificationService.warning("Request Added",t.result.message?t.result.message:t.result.errorMessage),e.requested=!1,e.approved=!1,e.processed=!1,e.requestProcessing=!1)})}catch(t){e.processed=!1,e.requestProcessing=!1,this.notificationService.error(t)}},e.prototype.popularMovies=function(){var e=this;this.clearResults(),this.searchService.popularMovies().subscribe(function(t){e.movieResults=t,e.processGrid(t),e.getExtaInfo()})},e.prototype.nowPlayingMovies=function(){var e=this;this.clearResults(),this.searchService.nowPlayingMovies().subscribe(function(t){e.movieResults=t,e.getExtaInfo()})},e.prototype.topRatedMovies=function(){var e=this;this.clearResults(),this.searchService.topRatedMovies().subscribe(function(t){e.movieResults=t,e.getExtaInfo()})},e.prototype.upcomingMovies=function(){var e=this;this.clearResults(),this.searchService.upcomingMovies().subscribe(function(t){e.movieResults=t,e.getExtaInfo()})},e.prototype.getExtaInfo=function(){var e=this;this.movieResults.forEach(function(t){e.searchService.getMovieInformation(t.id).subscribe(function(s){return e.updateItem(t,s)})})},e.prototype.updateItem=function(e,t){var s=this.movieResults.indexOf(e,0);s>-1&&(this.movieResults[s]=t)},e.prototype.clearResults=function(){this.movieResults=[],this.searchApplied=!1},e.prototype.processGrid=function(e){var t=this,s={movies:[]};e.forEach(function(e,n){++n%4==0?(s.movies.push(e),t.movieResultGrid.push(s),s={movies:[]}):s.movies.push(e)}),this.movieResultGrid.push(s)},e=n([i.Component({selector:"movie-search-grid",template:s(287)}),a("design:paramtypes",[l.SearchService,l.RequestService,l.NotificationService,o.AuthService])],e)}();t.MovieSearchGridComponent=c},287:function(e,t){e.exports='\x3c!-- Movie tab --\x3e\n<div role="tabpanel" class="tab-pane active" id="MoviesTab">\n    <div class="input-group">\n        <input id="search" type="text" class="form-control form-control-custom form-control-search form-control-withbuttons" (keyup)="search($event)">\n        <div class="input-group-addon right-radius">\n            <div class="btn-group">\n                <a href="#" class="btn btn-sm btn-primary-outline dropdown-toggle" data-toggle="dropdown" aria-expanded="false">\n                    Suggestions\n                    <i class="fa fa-chevron-down"></i>\n                </a>\n                <ul class="dropdown-menu">\n                    <li>\n                        <a (click)="popularMovies()">Popular Movies</a>\n                    </li>\n                    <li>\n                        <a (click)="upcomingMovies()">Upcoming Movies</a>\n                    </li>\n                    <li>\n                        <a (click)="topRatedMovies()">Top Rated Movies</a>\n                    </li>\n                    <li>\n                        <a (click)="nowPlayingMovies()">Now Playing Movies</a>\n                    </li>\n                </ul>\n            </div>\n            <i id="movieSearchButton" class="fa fa-search"></i>\n        </div>\n    </div>\n    <br />\n    <br />\n    \x3c!-- Movie content --\x3e\n    <div id="movieList">\n        <div *ngIf="searchApplied && movieResults?.length <= 0" class=\'no-search-results\'>\n            <i class=\'fa fa-film no-search-results-icon\'></i>\n            <div class=\'no-search-results-text\'>Sorry, we didn\'t find any results!</div>\n        </div>\n\n        \x3c!--NEW--\x3e\n        <div *ngFor="let grid of movieResultGrid; let i = index">\n            <div class="row">\n                <div *ngFor="let r of grid.movies">\n                    <div class="col-md-3">\n\n                        <img *ngIf="r.posterPath" class="img-responsive poster" src="https://image.tmdb.org/t/p/w150/{{r.posterPath}}"\n                            alt="poster">\n\n                    </div>\n                </div>\n            </div>\n        </div>\n        \x3c!--END NEW--\x3e\n\n        <br/>\n        <br/>\n        <br/>\n\n        <hr/>\n        <div *ngFor="let result of movieResults">\n            <div class="row">\n                <div id="imgDiv" class="col-sm-2">\n\n\n                    <img *ngIf="result.posterPath" class="img-responsive poster" src="https://image.tmdb.org/t/p/w150/{{result.posterPath}}"\n                        alt="poster">\n\n                </div>\n                <div class="col-sm-8">\n                    <div>\n                        <a href="https://www.themoviedb.org/movie/{{result.id}}/" target="_blank">\n                            <h4>{{result.title}} ({{result.releaseDate | date: \'yyyy\'}})</h4>\n                        </a>\n\n                        <span *ngIf="result.releaseDate" class="label label-info" target="_blank">Release Date: {{result.releaseDate | date: \'dd/MM/yyyy\'}}</span>\n\n                        <a *ngIf="result.homepage" href="{{result.homepage}}" id="homepageLabel" target="_blank">\n                            <span class="label label-info">HomePage</span>\n                        </a>\n\n                        <a *ngIf="result.trailer" href="{{result.trailer}}" id="trailerLabel" target="_blank">\n                            <span class="label label-info">Trailer</span>\n                        </a>\n                        <span *ngIf="result.quality" class="label label-success" id="qualityLabel">{{result.quality}}p</span>\n\n                        <ng-template [ngIf]="result.available">\n                            <span class="label label-success"  id="availableLabel">Available</span>\n                        </ng-template>\n                        <ng-template [ngIf]="result.approved && !result.available">\n                            <span class="label label-info" id="processingRequestLabel">Processing Request</span>\n                        </ng-template>\n                        <ng-template [ngIf]="result.requested && !result.approved && !result.available">\n                            <span class="label label-warning" id="pendingApprovalLabel">Pending Approval</span>\n                        </ng-template>\n                        <ng-template [ngIf]="!result.requested && !result.available && !result.approved">\n                            <span class="label label-danger" id="notRequetsedLabel">Not Requested</span>\n                        </ng-template>\n\n\n\n\n                        <br/>\n                        <br/>\n                    </div>\n                    <p style="font-size: 0.9rem !important">{{result.overview}}</p>\n                </div>\n\n\n                <div class="col-sm-2">\n\n                    <div *ngIf="result.available">\n                        <button style="text-align: right" class="btn btn-success-outline disabled" disabled>\n                            <i class="fa fa-check"></i> Available</button>\n\n                        <div *ngIf="result.plexUrl">\n                            <br/>\n                            <br/>\n                            <a style="text-align: right" class="btn btn-sm btn-primary-outline" href="{{result.plexUrl}}" target="_blank">\n                                <i class="fa fa-eye"></i> View In Plex</a>\n\n                        </div>\n                    </div>\n                    <div *ngIf="!result.available">\n                        <div *ngIf="result.requested || result.approved; then requestedBtn else notRequestedBtn"></div>\n                        <ng-template #requestedBtn>\n                            <button style="text-align: right" class="btn btn-primary-outline disabled" [disabled]>\n                                <i class="fa fa-check"></i> Requested</button>\n                        </ng-template>\n                        <ng-template #notRequestedBtn>\n                            <button id="{{result.id}}" style="text-align: right" class="btn btn-primary-outline" (click)="request(result)">\n                                <i *ngIf="result.requestProcessing" class="fa fa-circle-o-notch fa-spin fa-fw"></i>\n                                <i *ngIf="!result.requestProcessing && !result.processed" class="fa fa-plus"></i>\n                                <i *ngIf="result.processed && !result.requestProcessing" class="fa fa-check"></i>Request</button>\n                        </ng-template>\n                    </div>\n\n                    <br/>\n                    <div *ngIf="result.available">\n                        <a *ngIf="result.plexUrl" style="text-align: right" class="btn btn-sm btn-success-outline" href="{{result.plexUrl}}" target="_blank">\n                            <i class="fa fa-eye"></i> View On Plex</a>\n\n                    </div>\n\n                </div>\n\n            </div>\n            <hr/>\n        </div>\n\n    </div>\n</div>'},288:function(e,t,s){"use strict";var n=this&&this.__decorate||function(e,t,s,n){var a,i=arguments.length,r=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,s):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,s,n);else for(var o=e.length-1;o>=0;o--)(a=e[o])&&(r=(i<3?a(r):i>3?a(t,s,r):a(t,s))||r);return i>3&&r&&Object.defineProperty(t,s,r),r},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=s(0),r=s(3),o=function(){function e(e,t){this.issuesService=e,this.settingsService=t,this.issuesEnabled=!1}return e.prototype.ngOnInit=function(){var e=this;this.showMovie=!0,this.showTv=!1,this.issuesService.getCategories().subscribe(function(t){return e.issueCategories=t}),this.settingsService.getIssueSettings().subscribe(function(t){return e.issuesEnabled=t.enabled})},e.prototype.selectMovieTab=function(){this.showMovie=!0,this.showTv=!1},e.prototype.selectTvTab=function(){this.showMovie=!1,this.showTv=!0},e=n([i.Component({template:s(289)}),a("design:paramtypes",[r.IssuesService,r.SettingsService])],e)}();t.SearchComponent=o},289:function(e,t){e.exports='<h1 [translate]="\'Search.Title\'"></h1>\n<h4 [translate]="\'Search.Paragraph\'"></h4>\n<br />\n\x3c!-- Nav tabs --\x3e\n\n\n<ul id="nav-tabs" class="nav nav-tabs" role="tablist">\n\n    <li role="presentation" class="active">\n        <a id="movieTabButton" href="#MoviesTab" aria-controls="home" role="tab" data-toggle="tab" (click)="selectMovieTab()"><i class="fa fa-film"></i>  {{ \'Search.MoviesTab\' | translate }}</a>\n    </li>\n    \n    <li role="presentation">\n        <a id="tvTabButton" href="#TvShowTab" aria-controls="profile" role="tab" data-toggle="tab" (click)="selectTvTab()"><i class="fa fa-television"></i> {{ \'Search.TvTab\' | translate }}</a>\n    </li>\n</ul>\n\n\x3c!-- Tab panes --\x3e\n<div class="tab-content">\n\n    <div [hidden]="!showMovie">\n        <movie-search [issueCategories]="issueCategories" [issuesEnabled]="issuesEnabled"></movie-search>\n    </div>\n\n    <div [hidden]="!showTv">\n        <tv-search [issueCategories]="issueCategories" [issuesEnabled]="issuesEnabled"></tv-search>\n    </div>\n</div>\n\n\n'},290:function(e,t,s){"use strict";var n=this&&this.__decorate||function(e,t,s,n){var a,i=arguments.length,r=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,s):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,s,n);else for(var o=e.length-1;o>=0;o--)(a=e[o])&&(r=(i<3?a(r):i>3?a(t,s,r):a(t,s))||r);return i>3&&r&&Object.defineProperty(t,s,r),r},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=s(0);s(185);var r=s(3),o=s(3),l=s(3),c=function(){function e(e,t,s){this.searchService=e,this.requestService=t,this.notificationService=s,this.requestedEpisodes=[]}return e.prototype.ngOnInit=function(){var e=this;this.searchService.getShowInformation(this.seriesId).subscribe(function(t){e.series=t})},e.prototype.submitRequests=function(){var e=this;this.series.seasonRequests.some(function(e){return e.episodes.some(function(e){return e.selected})})?(this.series.requested=!0,this.requestService.requestTv(this.series).subscribe(function(t){e.result=t,e.result.result?(e.notificationService.success("Request for "+e.series.title+" has been added successfully"),e.series.seasonRequests.forEach(function(e){e.episodes.forEach(function(e){e.selected=!1})})):e.notificationService.warning("Request Added",e.result.errorMessage?e.result.errorMessage:e.result.message)})):this.notificationService.error("You need to select some episodes!")},e.prototype.addRequest=function(e){e.requested=!0,e.selected=!0},e.prototype.removeRequest=function(e){e.requested=!1,e.selected=!1},e.prototype.addAllEpisodes=function(e){var t=this;e.episodes.forEach(function(e){return t.addRequest(e)})},n([i.Input(),a("design:type",Number)],e.prototype,"seriesId",void 0),e=n([i.Component({selector:"seriesinformation",template:s(291),styles:[s(292)]}),a("design:paramtypes",[l.SearchService,o.RequestService,r.NotificationService])],e)}();t.SeriesInformationComponent=c},291:function(e,t){e.exports='<style>\n    #bannerimage {\n        width: 758px;\n        height: 140px;\n        background-color: black;\n        background-position: center;\n        padding-bottom:30px;\n    }\n</style>\n<div *ngIf="series">\n    <button class="btn btn-sm btn-success pull-right" (click)="submitRequests()" title="Go to top">{{ \'Search.TvShows.SubmitRequest\' | translate }}</button>\n    \n    <ngb-tabset>\n             \n        <div *ngFor="let season of series.seasonRequests">\n            <ngb-tab [id]="season.seasonNumber" [title]="season.seasonNumber">\n                <ng-template ngbTabContent>\n                    <h2 [translate]="\'Requests.SeasonNumberHeading\'" [translateParams]="{seasonNumber: season.seasonNumber}">Season: {{season.seasonNumber}}</h2>\n                    \n                    <button (click)="addAllEpisodes(season)" class="btn btn-sm btn-primary-outline" [translate]="\'Search.TvShows.SelectAllInSeason\'" [translateParams]="{seasonNumber: season.seasonNumber}">Select All in Season {{season.seasonNumber}}</button>\n                    <table class="table table-striped table-hover table-responsive table-condensed">\n                        <thead>\n                        <tr>\n                            <th>\n                                <a>\n                                    #\n                                </a>\n                            </th>\n                            <th>\n                                <a>\n                                    Title\n                                </a>\n                            </th>\n                            <th>\n                                <a>\n                                    Air Date\n                                </a>\n                            </th>\n                            <th>\n                                <a>\n                                    Status\n                                </a>\n                            </th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr *ngFor="let ep of season.episodes">\n                            <td>\n                                {{ep.episodeNumber}}\n                            </td>\n                            <td>\n                                {{ep.title}}\n                            </td>\n                            <td>\n                                {{ep.airDate | date: \'dd/MM/yyyy\' }}\n                            </td>\n                            <td>\n                                <ng-template [ngIf]="ep.available"><span class="label label-success" id="availableLabel">Available</span></ng-template>\n                                <ng-template [ngIf]="ep.approved && !ep.available "><span class="label label-info" id="processingRequestLabel">Processing Request</span></ng-template>\n                                <ng-template [ngIf]="ep.selected"><span class="label label-info" id="selectedLabel">Selected</span></ng-template>\n                                <ng-template [ngIf]="ep.requested && !ep.approved && !ep.available && !ep.selected"><span class="label label-warning" id="pendingApprovalLabel">Pending Approval</span></ng-template>\n                                <ng-template [ngIf]="!ep.requested && !ep.available && !ep.approved"><span class="label label-danger" id="notRequetsedLabel">Not Requested</span></ng-template>\n                            </td>\n\n                            <td>\n                                <button *ngIf="!ep.selected" (click)="addRequest(ep)" [disabled]="ep.available || ep.requested || ep.approved" class="btn btn-sm btn-primary-outline">Select</button>\n                                <button *ngIf="ep.selected" (click)="removeRequest(ep)" class="btn btn-sm btn-primary-outline">Unselect</button>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </ng-template>\n            </ngb-tab>\n        </div>\n    </ngb-tabset>\n    \n</div>\n'},292:function(e,t,s){var n=s(293);e.exports="string"==typeof n?n:n.toString()},293:function(e,t,s){(e.exports=s(12)(!1)).push([e.i,"#requestFloatingBtn{position:fixed;bottom:20px;right:30px;z-index:99;cursor:pointer;padding:15px;border-radius:10px}#requestFloatingBtn:hover{background-color:#555}",""])},294:function(e,t,s){"use strict";var n=this&&this.__decorate||function(e,t,s,n){var a,i=arguments.length,r=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,s):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,s,n);else for(var o=e.length-1;o>=0;o--)(a=e[o])&&(r=(i<3?a(r):i>3?a(t,s,r):a(t,s))||r);return i>3&&r&&Object.defineProperty(t,s,r),r},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var i=s(0),r=s(13),o=s(90),l=s(15),c=s(3),u=function(){function e(e,t,s,n,a,i){var r=this;this.searchService=e,this.requestService=t,this.notificationService=s,this.authService=n,this.imageService=a,this.sanitizer=i,this.searchChanged=new o.Subject,this.searchApplied=!1,this.issuesBarVisible=!1,this.searchChanged.debounceTime(600).distinctUntilChanged().subscribe(function(e){r.searchText=e,""!==r.searchText?r.searchService.searchTvTreeNode(r.searchText).subscribe(function(e){r.tvResults=e,r.searchApplied=!0,r.getExtraInfo()}):r.clearResults()})}return e.prototype.openClosestTab=function(e){e.preventDefault();for(e=e.toElement||e.relatedTarget||e.target;"undefined ng-star-inserted"!==e.className;)e=e.parentNode;for(var t=0,s=e.children;t<s.length;t++){var n=s[t];if(n.className.includes("fa-caret-right")||n.className.includes("fa-caret-down")){n.click();break}}},e.prototype.ngOnInit=function(){this.searchText="",this.tvResults=[],this.result={message:"",result:!1,errorMessage:""}},e.prototype.search=function(e){this.searchChanged.next(e.target.value)},e.prototype.popularShows=function(){var e=this;this.clearResults(),this.searchService.popularTv().subscribe(function(t){e.tvResults=t,e.getExtraInfo()})},e.prototype.trendingShows=function(){var e=this;this.clearResults(),this.searchService.trendingTv().subscribe(function(t){e.tvResults=t,e.getExtraInfo()})},e.prototype.mostWatchedShows=function(){var e=this;this.clearResults(),this.searchService.mostWatchedTv().subscribe(function(t){e.tvResults=t,e.getExtraInfo()})},e.prototype.anticipatedShows=function(){var e=this;this.clearResults(),this.searchService.anticipatedTv().subscribe(function(t){e.tvResults=t,e.getExtraInfo()})},e.prototype.getExtraInfo=function(){var e=this;this.tvResults.forEach(function(t,s){e.imageService.getTvBanner(t.data.id).subscribe(function(s){t.data.background=e.sanitizer.bypassSecurityTrustStyle("url("+s+")")}),e.searchService.getShowInformationTreeNode(t.data.id).subscribe(function(s){if(s.data)e.updateItem(t,s);else{var n=e.tvResults.indexOf(t,0);n>-1&&e.tvResults.splice(n,1)}})})},e.prototype.request=function(e){var t=this;e.requested=!0,(this.authService.hasRole("admin")||this.authService.hasRole("AutoApproveMovie"))&&(e.approved=!0),this.requestService.requestTv(e).subscribe(function(s){t.result=s,t.result.result?t.notificationService.success("Request for "+e.title+" has been added successfully"):t.result.errorMessage&&t.result.message?t.notificationService.warning("Request Added",t.result.message+" - "+t.result.errorMessage):t.notificationService.warning("Request Added",t.result.message?t.result.message:t.result.errorMessage)})},e.prototype.allSeasons=function(e,t){t.preventDefault(),e.requestAll=!0,this.request(e)},e.prototype.firstSeason=function(e,t){t.preventDefault(),e.firstSeason=!0,this.request(e)},e.prototype.latestSeason=function(e,t){t.preventDefault(),e.latestSeason=!0,this.request(e)},e.prototype.reportIssue=function(e,t){this.issueRequestId=t.id,this.issueRequestTitle=t.title,this.issueCategorySelected=e,this.issuesBarVisible=!0,this.issueProviderId=t.id.toString()},e.prototype.updateItem=function(e,t){var s=this.tvResults.indexOf(e,0);s>-1&&(this.tvResults[s].data.banner=t.data.banner,this.tvResults[s].data.imdbId=t.data.imdbId,this.tvResults[s].data.seasonRequests=t.data.seasonRequests,this.tvResults[s].data.seriesId=t.data.seriesId,this.tvResults[s].data.fullyAvailable=t.data.fullyAvailable,this.tvResults[s].data.backdrop=t.data.backdrop)},e.prototype.clearResults=function(){this.tvResults=[],this.searchApplied=!1},n([i.Input(),a("design:type",Array)],e.prototype,"issueCategories",void 0),n([i.Input(),a("design:type",Boolean)],e.prototype,"issuesEnabled",void 0),e=n([i.Component({selector:"tv-search",template:s(295),styles:[s(186)]}),a("design:paramtypes",[c.SearchService,c.RequestService,c.NotificationService,l.AuthService,c.ImageService,r.DomSanitizer])],e)}();t.TvSearchComponent=u},295:function(e,t){e.exports='\x3c!-- Movie tab --\x3e\n<div role="tabpanel" class="tab-pane" id="TvShowTab">\n    <div class="input-group">\n        <input id="search" type="text" class="form-control form-control-custom form-control-search form-control-withbuttons" (keyup)="search($event)">\n        <div class="input-group-addon right-radius">\n            <div class="btn-group">\n                <a href="#" class="btn btn-sm btn-primary-outline dropdown-toggle" data-toggle="dropdown" aria-expanded="false">\n                    {{ \'Search.Suggestions\' | translate }} \n                    <i class="fa fa-chevron-down"></i>\n                </a>\n                <ul class="dropdown-menu">\n                    <li>\n                        <a (click)="popularShows()">{{ \'Search.TvShows.Popular\' | translate }} </a>\n                    </li>\n                    <li>\n                        <a (click)="trendingShows()">{{ \'Search.TvShows.Trending\' | translate }}</a>\n                    </li>\n                    <li>\n                        <a (click)="mostWatchedShows()">{{ \'Search.TvShows.MostWatched\' | translate }}</a>\n                    </li>\n                    <li>\n                        <a (click)="anticipatedShows()">{{ \'Search.TvShows.MostAnticipated\' | translate }}</a>\n                    </li>\n                </ul>\n            </div>\n            <i id="tvSearchButton" class="fa fa-search"></i>\n        </div>\n    </div>\n    <br />\n    <br />\n    \x3c!-- Movie content --\x3e\n    <div id="actorMovieList">\n    </div>\n\n\n    <br />\n    <br />\n    \x3c!-- TV content --\x3e\n    <div id="tvList">\n\n        <div *ngIf="searchApplied && tvResults?.length <= 0" class=\'no-search-results\'>\n            <i class=\'fa fa-film no-search-results-icon\'></i>\n            <div class=\'no-search-results-text\'>{{ \'Search.NoResults\' | translate }}</div>\n        </div>\n        <p-treeTable [value]="tvResults">\n            <p-column>\n                <ng-template let-col let-node="rowData" pTemplate="header">\n                    {{ \'Search.TvShows.Results\' | translate }}\n                </ng-template>\n                <ng-template let-col let-node="rowData" pTemplate="body">\n                    \x3c!--This is the section that holds the parent level search results set--\x3e\n                    <div *ngIf="!node.leaf">\n                        <div class="row" >\n                            \n                <div class="myBg backdrop" [style.background-image]="node?.data?.background"></div>\n                <div class="tint" style="background-image: linear-gradient(to bottom, rgba(0,0,0,0.6) 0%,rgba(0,0,0,0.6) 100%);"></div>\n                            <div class="col-sm-2 small-padding">\n\n                                <img *ngIf="node?.data?.banner" class="img-responsive poster" width="150" [src]="node.data.banner" alt="poster">\n\n                            </div>\n                            <div class="col-sm-8 small-padding">\n                                <div>\n\n                                    <a href="http://www.imdb.com/title/{{node.data.imdbId}}/" target="_blank">\n                                        <h4>{{node.data.title}} ({{node.data.firstAired | date: \'yyyy\'}})</h4>\n\n                                    </a>\n                                    <span class="tags">\n                                            <a *ngIf="node.data.homepage" id="homepageLabel" href="{{node.data.homepage}}" target="_blank"><span class="label label-info" >{{ \'Search.Movies.HomePage\' | translate }}</span></a>\n  \n                                            <a *ngIf="node.data.trailer"  id="trailerLabel" href="{{node.data.trailer}}" target="_blank"><span class="label label-info">{{ \'Search.Movies.Trailer\' | translate }}</span></a>\n\n                                    <span *ngIf="node.data.status" class="label label-primary" id="statusLabel" target="_blank">{{node.data.status}}</span>\n\n\n                                    <span *ngIf="node.data.firstAired" class="label label-info" target="_blank" id="airDateLabel">{{ \'Search.TvShows.AirDate\' | translate }} {{node.data.firstAired | date: \'dd/MM/yyyy\'}}</span>\n\n                                    <span *ngIf="node.data.network" class="label label-info" id="networkLabel" target="_blank">{{node.data.network}}</span>\n\n                    \n                                        <span *ngIf="node.data.available" class="label label-success" id="availableLabel">{{ \'Common.Available\' | translate }}</span>\n                                    \n                                        <span *ngIf="node.data.partlyAvailable" class="label label-warning" id="partiallyAvailableLabel">{{ \'Common.PartlyAvailable\' | translate }}</span>\n                                   \n\n                                 \n                                </span>\n\n                                    <br />\n                                    <br />\n                                </div>\n                                <p class="tv-overview">{{node.data.overview}}</p>\n                            </div>\n\n\n                            <div class="col-sm-2 small-padding">\n                                <div *ngIf="!node.data.fullyAvailable" class="dropdown">\n                                    <button class="btn btn-primary-outline dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">\n                                        <i class="fa fa-plus"></i> {{ \'Common.Request\' | translate }}\n                                        <span class="caret"></span>\n                                    </button>\n                                    <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">\n                                        <li>\n                                            <a href="#" (click)="allSeasons(node.data, $event)">{{ \'Search.TvShows.AllSeasons\' | translate }}</a>\n                                        </li>\n                                        <li>\n                                            <a href="#" (click)="firstSeason(node.data, $event)">{{ \'Search.TvShows.FirstSeason\' | translate }}</a>\n                                        </li>\n                                        <li>\n                                            <a href="#" (click)="latestSeason(node.data, $event)">{{ \'Search.TvShows.LatestSeason\' | translate }}</a>\n                                        </li>\n                                        <li>\n                                            <a href="#" (click)="openClosestTab($event)">{{ \'Search.TvShows.Select\' | translate }}</a>\n                                        </li>\n                                    </ul>\n                                </div>\n\n                                <div *ngIf="node.data.fullyAvailable">\n                                    <button style="text-align: right" class="btn btn-success-outline disabled" disabled>\n                                        <i class="fa fa-check"></i> {{ \'Common.Available\' | translate }}</button>\n                                </div>\n                                <br />\n                                <div *ngIf="node.data.plexUrl && node.data.available">\n                                    <a  style="text-align: right" class="btn btn-sm btn-success-outline" href="{{node.data.plexUrl}}"\n                                        target="_blank">\n                                        <i class="fa fa-eye"></i> {{ \'Search.ViewOnPlex\' | translate }}</a>\n  </div>\n                                <div class="dropdown" *ngIf="issueCategories && issuesEnabled">\n                                    <button class="btn btn-sm btn-primary-outline dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true"\n                                        aria-expanded="true">\n                                        <i class="fa fa-plus"></i> {{ \'Requests.ReportIssue\' | translate }}\n                                        <span class="caret"></span>\n                                    </button>\n                                    <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">\n                                        <li *ngFor="let cat of issueCategories">\n                                            <a [routerLink]="" (click)="reportIssue(cat, node.data)">{{cat.value}}</a>\n                                        </li>\n                                    </ul>\n                                </div>\n                                <div *ngIf="!node.data.available">\n                                    <br/>\n                                    <br/>\n                                </div>\n\n                            </div>\n\n                        </div>\n                    </div>\n                    \x3c!--This is the section that holds the child seasons if they want to specify specific episodes--\x3e\n                    <div *ngIf="node.leaf">\n                        <seriesinformation [seriesId]="node.data.id"></seriesinformation>\n                    </div>\n\n                    <br/>\n                    <br/>\n                </ng-template>\n            </p-column>\n        </p-treeTable>\n    </div>\n</div>\n\n\n<issue-report [movie]="false" [visible]="issuesBarVisible" (visibleChange)="issuesBarVisible = $event;" [title]="issueRequestTitle"\n    [issueCategory]="issueCategorySelected" [id]="issueRequestId" [providerId]="issueProviderId"></issue-report>'}});
//# sourceMappingURL=2.js.map