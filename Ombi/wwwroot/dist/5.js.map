{"version":3,"sources":["webpack:///./ClientApp/app/wizard/wizard.module.ts","webpack:///./ClientApp/app/wizard/createadmin/createadmin.component.ts","webpack:///./ClientApp/app/wizard/createadmin/createadmin.component.html","webpack:///./ClientApp/app/wizard/emby/emby.component.ts","webpack:///./ClientApp/app/wizard/emby/emby.component.html","webpack:///./ClientApp/app/wizard/mediaserver/mediaserver.component.ts","webpack:///./ClientApp/app/wizard/mediaserver/mediaserver.component.html","webpack:///./ClientApp/app/wizard/plex/plex.component.ts","webpack:///./ClientApp/app/wizard/plex/plex.component.html","webpack:///./ClientApp/app/wizard/welcome/welcome.component.ts","webpack:///./ClientApp/app/wizard/welcome/welcome.component.html"],"names":["common_1","__webpack_require__","core_1","forms_1","router_1","primeng_1","createadmin_component_1","emby_component_1","mediaserver_component_1","plex_component_1","welcome_component_1","services_1","services_2","services_3","routes","path","component","WelcomeComponent","MediaServerComponent","PlexComponent","EmbyComponent","CreateAdminComponent","WizardModule","__decorate","NgModule","imports","CommonModule","FormsModule","ConfirmDialogModule","RouterModule","forChild","declarations","exports","providers","PlexService","IdentityService","EmbyService","ConfirmationService","auth_service_1","identityService","notificationService","router","auth","settings","this","prototype","createUser","_this","createWizardUser","username","password","usePlexAdminAccount","subscribe","x","login","rememberMe","c","localStorage","setItem","access_token","getOmbi","ombi","wizard","saveOmbi","navigate","error","Component","template","NotificationService","Router","AuthService","SettingsService","module","embyService","ngOnInit","embySettings","servers","id","enable","push","ip","administratorId","apiKey","enableEpisodeSearching","name","port","ssl","subDir","save","logIn","plex","emby","skip","plexService","confirmationService","requestAuthToken","user","confirm","message","header","icon","accept","getUserManagementSettings","usr","importPlexAdmin","saveUserManagementSettings","saved","reject","next"],"mappings":"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","file":"5.js","sourcesContent":["import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport {ConfirmationService, ConfirmDialogModule } from \"primeng/primeng\";\n\nimport { CreateAdminComponent } from \"./createadmin/createadmin.component\";\nimport { EmbyComponent } from \"./emby/emby.component\";\nimport { MediaServerComponent } from \"./mediaserver/mediaserver.component\";\nimport { PlexComponent } from \"./plex/plex.component\";\nimport { WelcomeComponent } from \"./welcome/welcome.component\";\n\nimport { EmbyService } from \"../services\";\nimport { PlexService } from \"../services\";\nimport { IdentityService } from \"../services\";\n\nconst routes: Routes = [\n    { path: \"\", component: WelcomeComponent},\n    { path: \"MediaServer\", component: MediaServerComponent},\n    { path: \"Plex\", component: PlexComponent},\n    { path: \"Emby\", component: EmbyComponent},\n    { path: \"CreateAdmin\", component: CreateAdminComponent},\n];\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ConfirmDialogModule,\n        RouterModule.forChild(routes),\n    ],\n    declarations: [\n        WelcomeComponent,\n        MediaServerComponent,\n        PlexComponent,\n        CreateAdminComponent,\n        EmbyComponent,\n    ],\n    exports: [\n        RouterModule,\n    ],\n    providers: [\n        PlexService,\n        IdentityService,\n        EmbyService,\n        ConfirmationService,\n    ],\n\n})\nexport class WizardModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./ClientApp/app/wizard/wizard.module.ts","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { AuthService } from \"../../auth/auth.service\";\nimport { IdentityService } from \"../../services\";\nimport { NotificationService } from \"../../services\";\nimport { SettingsService } from \"../../services\";\n\n@Component({\n    template: require('./createadmin.component.html'),\n})\nexport class CreateAdminComponent {\n\n    public username: string;\n    public password: string;\n\n    constructor(private identityService: IdentityService, private notificationService: NotificationService,\n                private router: Router, private auth: AuthService, private settings: SettingsService) { }\n\n    public createUser() {\n        this.identityService.createWizardUser({username: this.username, password: this.password, usePlexAdminAccount: false}).subscribe(x => {\n            if (x) {\n                // Log me in.\n                this.auth.login({ username: this.username, password: this.password, rememberMe:false }).subscribe(c => {\n\n                    localStorage.setItem(\"id_token\", c.access_token);\n\n                    // Mark that we have done the settings now\n                    this.settings.getOmbi().subscribe(ombi => {\n                        ombi.wizard = true;\n\n                        this.settings.saveOmbi(ombi).subscribe(x => {\n\n                            this.router.navigate([\"search\"]);\n                        });\n\n                    });\n\n                });\n            } else {\n                this.notificationService.error(\"There was an error... You might want to put this on Github...\");\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./ClientApp/app/wizard/createadmin/createadmin.component.ts","module.exports = \"\\n<img class=\\\"landing-header\\\" src=\\\"/images/logo.png\\\" width=\\\"300\\\" />\\n<div class=\\\"landing-block shadow\\\">\\n<div class=\\\"media\\\">\\n<div id=\\\"contentBody\\\" class=\\\"media-body\\\">\\n<h4 class=\\\"media-heading landing-title\\\">Create the Admin account</h4>\\n<small>This account will be used to configure your settings and also manage all of the requests.</small>\\n<div class=\\\"form-group\\\">\\n    <div>\\n        <label for=\\\"adminUsername\\\">Username</label>\\n        <input type=\\\"text\\\" class=\\\"form-control form-control-custom\\\" id=\\\"adminUsername\\\" name=\\\"Username\\\" [(ngModel)]=\\\"username\\\" placeholder=\\\"Username\\\">\\n    </div>\\n    <br />\\n    <div>\\n        <label for=\\\"adminPassword\\\">Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control form-control-custom\\\" id=\\\"adminPassword\\\" name=\\\"Password\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\">\\n    </div>\\n</div>\\n\\n<div class=\\\"form-group\\\">\\n    <div style=\\\"text-align: center; margin-top: 20px\\\">\\n        <button (click)=\\\"createUser()\\\" type=\\\"submit\\\" class=\\\"btn btn-success-outline\\\">Finish</button>\\n    </div>\\n</div>\\n</div>\\n</div>\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/wizard/createadmin/createadmin.component.html\n// module id = 252\n// module chunks = 5","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { EmbyService } from \"../../services\";\nimport { NotificationService } from \"../../services\";\n\nimport { IEmbySettings } from \"../../interfaces\";\n\n@Component({\n    template: require('./emby.component.html'),\n})\nexport class EmbyComponent implements OnInit {\n\n    private embySettings: IEmbySettings;\n\n    constructor(private embyService: EmbyService,\n                private router: Router,\n                private notificationService: NotificationService) {\n    }\n\n    public ngOnInit() {\n        this.embySettings = {\n            servers: [],\n            id:0,\n            enable: true,\n        };\n        this.embySettings.servers.push({\n            ip: \"\",\n            administratorId: \"\",\n            id: 0,\n            apiKey: \"\",\n            enableEpisodeSearching: false,\n            name: \"Default\",\n            port: 8096,\n            ssl: false,\n            subDir: \"\",\n\n        });\n    }\n\n    public save() {\n        this.embyService.logIn(this.embySettings).subscribe(x => {\n            if (x == null || !x.servers[0].apiKey) {\n                this.notificationService.error(\"Username or password was incorrect. Could not authenticate with Emby.\");\n                return;\n            }\n            this.router.navigate([\"Wizard/CreateAdmin\"]);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./ClientApp/app/wizard/emby/emby.component.ts","module.exports = \"\\n<img class=\\\"landing-header\\\" src=\\\"/images/logo.png\\\" width=\\\"300\\\" />\\n<div class=\\\"landing-block shadow\\\">\\n<div class=\\\"media\\\">\\n<div id=\\\"contentBody\\\" class=\\\"media-body\\\">\\n<h4 class=\\\"media-heading landing-title\\\">Emby Authentication</h4>\\n    <div *ngIf=\\\"embySettings\\\">\\n        <div *ngIf=\\\"embySettings.servers\\\">\\n            <div *ngFor=\\\"let server of embySettings.servers\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"Ip\\\" class=\\\"control-label\\\">Emby Hostname or IP Address</label>\\n                    <div>\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"server.ip\\\" class=\\\"form-control form-control-custom \\\" id=\\\"Ip\\\" name=\\\"Ip\\\" placeholder=\\\"192.168.1.1\\\">\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"portNumber\\\" class=\\\"control-label\\\">Port</label>\\n\\n                    <div>\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"server.port\\\" class=\\\"form-control form-control-custom \\\" id=\\\"portNumber\\\" name=\\\"Port\\\" value=\\\"{{server.port}}\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"checkbox\\\">\\n                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"server.ssl\\\" id=\\\"Ssl\\\" name=\\\"Ssl\\\"><label for=\\\"Ssl\\\">SSL</label>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"username\\\" class=\\\"control-label\\\">Api Key</label>\\n                    <div>\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"server.apiKey\\\" class=\\\"form-control form-control-custom\\\" id=\\\"apiKey\\\" name=\\\"ApiKey\\\" placeholder=\\\"ApiKey\\\">\\n                    </div>\\n                </div>\\n                <div style=\\\"text-align: center; margin-top: 20px\\\">\\n                    <a (click)=\\\"save()\\\" id=\\\"embyApiKeySave\\\" class=\\\"btn btn-primary-outline\\\">Next <div id=\\\"spinner\\\"></div></a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/wizard/emby/emby.component.html\n// module id = 254\n// module chunks = 5","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n    template: require('./mediaserver.component.html'),\n})\nexport class MediaServerComponent {\n    constructor(private router: Router) { }\n\n    public plex() {\n        this.router.navigate([\"Wizard/Plex\"]);\n    }\n\n    public emby() {\n        this.router.navigate([\"Wizard/Emby\"]);\n    }\n\n    public skip() {\n        this.router.navigate([\"Wizard/CreateAdmin\"]);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./ClientApp/app/wizard/mediaserver/mediaserver.component.ts","module.exports = \"\\n<img class=\\\"landing-header\\\" src=\\\"/images/logo.png\\\" width=\\\"300\\\" />\\n<div class=\\\"landing-block shadow\\\">\\n    <div class=\\\"media\\\">\\n        <div id=\\\"contentBody\\\" class=\\\"media-body\\\">\\n            <h4 class=\\\"media-heading landing-title wizard-heading\\\" id=\\\"statusTitle\\\">Please choose your media server</h4>\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"row\\\">\\n                    <a (click)=\\\"emby()\\\" id=\\\"embyImg\\\">\\n                        <img class=\\\"wizard-img\\\" src=\\\"/images/emby-logo-dark.png\\\" />\\n                    </a>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <a (click)=\\\"plex()\\\" id=\\\"plexImg\\\">\\n                        <img class=\\\"wizard-img\\\" src=\\\"/images/plex-logo-reversed.png\\\" />\\n                    </a>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <button (click)=\\\"skip()\\\" class=\\\"btn btn-primary-outline wizard-img\\\" id=\\\"plexImg\\\">\\n                        Skip\\n                    </button>\\n                </div>\\n\\n            </div>\\n        </div>\\n        </div>\\n</div>\\n\\n\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/wizard/mediaserver/mediaserver.component.html\n// module id = 256\n// module chunks = 5","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ConfirmationService } from \"primeng/primeng\";\n\nimport { PlexService } from \"../../services\";\nimport { IdentityService, NotificationService, SettingsService } from \"../../services\";\nimport { AuthService } from \"./../../auth/auth.service\";\n\n@Component({\n    template: require('./plex.component.html'),\n})\nexport class PlexComponent {\n\n    public login: string;\n    public password: string;\n\n    constructor(private plexService: PlexService, private router: Router,\n                private notificationService: NotificationService,\n                private confirmationService: ConfirmationService,\n                private identityService: IdentityService,\n                private settings: SettingsService,\n                private auth: AuthService) { }\n\n    public requestAuthToken() {\n        this.plexService.logIn(this.login, this.password).subscribe(x => {\n            if (x.user == null) {\n                this.notificationService.error(\"Username or password was incorrect. Could not authenticate with Plex.\");\n                return;\n            }\n            this.confirmationService.confirm({\n              message: \"Do you want your Plex user to be the main admin account on Ombi?\",\n              header: \"Use Plex Account\",\n              icon: \"fa fa-check\",\n              accept: () => {\n                  this.identityService.createWizardUser({\n                    username: \"\",\n                    password: \"\",\n                    usePlexAdminAccount: true,\n                  }).subscribe(x => {\n                    if (x) {\n                        this.auth.login({ username: this.login, password: this.password, rememberMe:false }).subscribe(c => {\n                            localStorage.setItem(\"id_token\", c.access_token);\n                  \n                            // Mark that we have done the settings now\n                            this.settings.getOmbi().subscribe(ombi => {\n                                ombi.wizard = true;\n\n                                this.settings.saveOmbi(ombi).subscribe(x => {\n                                    this.settings.getUserManagementSettings().subscribe(usr => {\n\n                                        usr.importPlexAdmin = true;\n                                        this.settings.saveUserManagementSettings(usr).subscribe(saved => {\n                                            this.router.navigate([\"login\"]);\n                                        });\n                                    });\n\n                                });\n                            });\n                    });\n                    } else {\n                      this.notificationService.error(\"Could not get the Plex Admin Information\");\n                      return;\n                    }\n                  });\n              },\n              reject: () => {\n                this.router.navigate([\"Wizard/CreateAdmin\"]);\n              },\n            });  \n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./ClientApp/app/wizard/plex/plex.component.ts","module.exports = \"\\n<img class=\\\"landing-header\\\" src=\\\"/images/logo.png\\\" width=\\\"300\\\" />\\n<div class=\\\"landing-block shadow\\\">\\n<div class=\\\"media\\\">\\n<div id=\\\"contentBody\\\" class=\\\"media-body\\\">\\n<h4 class=\\\"media-heading landing-title\\\">Plex Authentication</h4>\\n<div class=\\\"form-group\\\">\\n    <label for=\\\"username\\\" class=\\\"control-label\\\">Username and Password</label>\\n    <div>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"login\\\" class=\\\"form-control form-control-custom\\\" id=\\\"username\\\"  placeholder=\\\"Username\\\">\\n    </div>\\n    <br />\\n    <div>\\n        <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" class=\\\"form-control form-control-custom\\\" placeholder=\\\"Password\\\">\\n    </div>\\n</div>\\n<small>Please note we do not store this information, we only store your Plex Authorization Token that will allow Ombi to view your media and friends</small>\\n<div class=\\\"form-group\\\">\\n    <div style=\\\"text-align: center; margin-top: 20px\\\">\\n        <button (click)=\\\"requestAuthToken()\\\" class=\\\"btn btn-primary-outline\\\">Request Token <i class=\\\"fa fa-key\\\"></i></button>\\n    </div>\\n</div>\\n</div>\\n</div>\\n</div>\\n\\n<p-confirmDialog></p-confirmDialog>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/wizard/plex/plex.component.html\n// module id = 258\n// module chunks = 5","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n    template: require('./welcome.component.html'),\n})\nexport class WelcomeComponent {\n    constructor(private router: Router) { }\n\n    public next() {\n        this.router.navigate([\"Wizard/MediaServer\"]);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/angular-router-loader/src!./ClientApp/app/wizard/welcome/welcome.component.ts","module.exports = \"\\n<img class=\\\"landing-header\\\" src=\\\"/images/logo.png\\\" width=\\\"300\\\" />\\n<div id=\\\"area\\\" class=\\\"landing-block shadow\\\">\\n\\n    <div class=\\\"media\\\">\\n        <div id=\\\"contentBody\\\" class=\\\"media-body\\\">\\n            <h4 class=\\\"media-heading landing-title\\\" id=\\\"statusTitle\\\">Welcome to Ombi</h4>\\n            <div class=\\\"form-group\\\">\\n                <small>we are just going to run though the initial Ombi setup!</small>\\n\\n                <div style=\\\"text-align: center; margin-top: 20px\\\">\\n                    <a (click)=\\\"next()\\\" class=\\\"btn btn-primary-outline\\\">Next</a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/wizard/welcome/welcome.component.html\n// module id = 260\n// module chunks = 5"],"sourceRoot":""}