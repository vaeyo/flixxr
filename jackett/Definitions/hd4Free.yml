---
  site: hd4free
  name: HD4Free
  description: "A HD tracker"
  language: en-us
  type: private
  encoding: UTF-8
  links:
    - https://hd4free.xyz/

  caps:
    categorymappings:
      - {id: 1, cat: Movies, desc: "MOVIES"}
      - {id: 2, cat: TV, desc: "TV"}
      - {id: 4, cat: Audio, desc: "MUSIC"}
      - {id: 7, cat: PC, desc: "APPS"}
      - {id: 10, cat: Books, desc: "ELECTRONIC MEDIA"}

    modes:
      search: [q]
      tv-search: [q, season, ep, imdbid]
      movie-search: [q, imdbid]

  login:
    path: /login
    method: form
    inputs:
      username: "{{ .Config.username }}"
      password: "{{ .Config.password }}"
    error:
      - selector: table.main:contains("Login Failed!")
    test:
      path: /torrents

  search:
    paths:
      - path: /filter
    inputs:
      $raw: "{{range .Categories}}categories[]={{.}}&{{end}}"
      search: "{{if .Query.IMDBID}}{{else}}{{ .Keywords }}{{end}}"
      imdb: "{{ .Query.IMDBIDShort }}"
      tvdb: ""
      tmdb: ""
      sorting: created_at
      direction: desc
      qty: 100
    preprocessingfilters:
      - name: jsonjoinarray
        args: ["$.result", ""]
      - name: prepend
        args: "<table>"
      - name: append
        args: "</table>"
    rows:
      selector: tr
    fields:
      category:
        selector: a[href*="/categories/"]
        attribute: href
        filters:
          - name: regexp
            args: "/categories/.*?\\.(\\d+)"
      title:
        selector: a.view-torrent
      download:
        selector: a[href*="/download_check/"]
        attribute: href
        filters:
          - name: replace
            args: ["/download_check/", "/download/"]
      details:
        selector: a.view-torrent
        attribute: href
      imdb:
        optional: true
        selector: a[href*="://www.imdb.com/title/"]
        attribute: href
      size:
        selector: td:nth-child(5)
      seeders:
        selector: td:nth-child(7)
      leechers:
        selector: td:nth-child(8)
      grabs:
        selector: td:nth-child(6)
        filters:
          - name: regexp
            args: ([\d\.]+)
      date:
        selector: time
        attribute: datetime
        filters:
          - name: append
            args: " +00:00"
          - name: dateparse
            args: "2006-01-02 15:04:05 -07:00"
      downloadvolumefactor:
        case:
          "i[data-original-title=\"100% Free\"]": "0"
          "i[data-original-title=\"Global FreeLeech\"]": "0"
          "*": "1"
      uploadvolumefactor:
        case:
          "i[data-original-title=\"Double upload\"]": "2"
          "*": "1"